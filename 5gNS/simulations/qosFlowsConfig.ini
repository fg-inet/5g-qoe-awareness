[General]
sim-time-limit=250s
num-rngs = 1
seed-0-mt = 5
output-scalar-file-append = false
record-eventlog = false
#cmdenv-express-mode = false
#cmdenv-output-file = log.txt
#cmdenv-autoflush = true
#**.cmdenv-log-level = warn

*.visualizer.*.interfaceTableVisualizer.displayInterfaceTables = true

**.tcp.typename = "Tcp"
**.udp.typename = "Udp"

**.packetCapacity = 500

# tcp general settings
**.tcp.advertisedWindow = 65535                      # in bytes, corresponds with the maximal receiver buffer capacity (Note: normally, NIC queues should be at least this size)
**.tcp.delayedAcksEnabled = false                    # delayed ACK algorithm (RFC 1122) enabled/disabled
**.tcp.nagleEnabled = true                           # Nagle's algorithm (RFC 896) enabled/disabled
**.tcp.limitedTransmitEnabled = false                # Limited Transmit algorithm (RFC 3042) enabled/disabled (can be used for TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl)
**.tcp.increasedIWEnabled = false                    # Increased Initial Window (RFC 3390) enabled/disabled
**.tcp.sackSupport = false                           # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)
**.tcp.windowScalingSupport = false                  # Window Scale (RFC 1323) support (header option) (WS will be enabled for a connection if both endpoints support it)
**.tcp.timestampSupport = false                      # Timestamps (RFC 1323) support (header option) (TS will be enabled for a connection if both endpoints support it)
**.tcp.mss = 1452                                    # Maximum Segment Size (RFC 793) (header option)
**.tcp.tcpAlgorithmClass = "TcpReno"                 # TCPReno/TCPTahoe/TCPNewReno/TCPNoCongestionControl/DumbTCP

**.tcp.*.*.vector-recording = true
**.tcp.*.rtt.result-recording-modes = +vector
**.tcp.*.*.result-recording-modes = -vector
**.host*.app*.*.vector-recording = true
**.ppp.*xPk*.vector-recording = true
#**.ppp.queue.*.vector-recording = true
#**.ppp.queue.*.*.vector-recording = true
#*.router*.ppp[0].ppp.vector-recording = true
**.vector-recording = false

[Config liteCbaselineTestExampleTopoVisualizer]
description = "Visualize base topology"
network = baselineTest

sim-time-limit=400s

output-vector-file = "${resultdir}/${configname}/${configname}-${runnumber}.vec"
output-scalar-file = "${resultdir}/${configname}/${configname}-${runnumber}.sca"

*.visualizer.*.interfaceTableVisualizer.displayInterfaceTables = false

**.crcMode = "computed"

*.nVID = ${numCli=1,2,10,20,30,40,50,60,70,80} # Number of video clients
*.nLVD = ${numCli} # Number of file download clients
*.nFDO = ${numCli} # Number of file download clients
*.nSSH = ${numCli} # Number of SSH clients
*.nVIP = ${numCli} # Number of VoIP clients

**.numApps = 0

[Config liteCbaselineTestTokenQoS_base]
description = "All five applications - base configuration without any resource allocation"
network = baselineTestQoS
sim-time-limit=400s

output-vector-file = "${resultdir}/${configname}/${configname}-${runnumber}.vec"
output-scalar-file = "${resultdir}/${configname}/${configname}-${runnumber}.sca"

**.crcMode = "computed"
*.host*.numApps = 1

#*.configurator.config = xmldoc("configs/baseQoS/routerConfigBaseHtbTest.xml")

# File download client
*.hostFDO[*].hasTcp = true
*.hostFDO[*].app[0].typename = "TcpFileDownloadApp"
*.hostFDO[*].app[0].localAddress = ""
*.hostFDO[*].app[0].localPort = -1 # port number to listen on
*.hostFDO[*].app[0].connectAddress = "serverFDO" # server address (may be symbolic)
*.hostFDO[*].app[0].connectPort = 1042 # port number to connect to
*.hostFDO[*].app[0].startTime = uniform(0.01s,1s) # time first session begins
*.hostFDO[*].app[0].stopTime = -1s # time of finishing sending, negative values mean forever
*.hostFDO[*].app[0].numRequestsPerSession = 1 # number of requests sent per session
*.hostFDO[*].app[0].requestLength = 800B # length of a request
*.hostFDO[*].app[0].replyLength = 10000KiB # length of a reply
*.hostFDO[*].app[0].thinkTime = 0.01s # time gap between requests
*.hostFDO[*].app[0].idleInterval = 1s # time gap between sessions
*.hostFDO[*].app[0].reconnectInterval = 1s # if connection breaks, waits this much before trying to reconnect
*.hostFDO[*].app[0].stopOperationExtraTime = -1s # extra time after lifecycle stop operation finished
*.hostFDO[*].app[0].stopOperationTimeout = 2s # timeout value for lifecycle stop operation

# File download server
*.serverFDO.hasTcp = true
*.serverFDO.numApps = 1
*.serverFDO.app[0].typename = "TcpGenericServerApp"
*.serverFDO.app[0].localAddress = "" # local address; may be left empty ("")
*.serverFDO.app[0].localPort = 1042 # localPort number to listen on
*.serverFDO.app[0].replyDelay = 0s #
*.serverFDO.app[0].stopOperationExtraTime = -1s # extra time after lifecycle stop operation finished
*.serverFDO.app[0].stopOperationTimeout  = 2s # timeout value for lifecycle stop operation

# Video client
**.hostVID[*].hasTcp = true
**.hostVID[*].app[0].typename = "TCPVideoStreamCliAppV2lite"
**.hostVID[*].app[0].localAddress = "" # may be left empty ("")
**.hostVID[*].app[0].localPort = -1 # port number to listen on
**.hostVID[*].app[0].connectAddress = "serverVID" # server address (may be symbolic)
**.hostVID[*].app[0].connectPort = 1042 # port number to connect to
**.hostVID[*].app[0].dataTransferMode = "object"
**.hostVID[*].app[0].startTime = uniform(0.01s,1s) # time first session begins
**.hostVID[*].app[0].stopTime = -1s # time of finish sending, 0 means infinity
**.hostVID[*].app[0].idleInterval = 1s
**.hostVID[*].app[0].requestLength = 200B # length of a request
**.hostVID[*].app[0].reconnectInterval = 1s # if connection breaks, waits this much before trying to reconnect
**.hostVID[*].app[0].numRequestsPerSession = 1 # number of requests sent per session
**.hostVID[*].app[0].thinkTime = 1s # time gap between requests
**.hostVID[*].app[0].video_resolution = "360 480 720 1080" # how many kbits are required for 1 second of video for each representation (quality levels)
**.hostVID[*].app[0].manifest_size = 100000
**.hostVID[*].app[0].video_buffer_max_length = 40s # buffer max length in seconds
**.hostVID[*].app[0].video_duration = int(uniform(240s,320s)) # video length in seconds
**.hostVID[*].app[0].segment_length = 5s # video segment length in seconds
**.hostVID[*].app[0].useFlexibleBitrate = "flexible"

# Video server
*.serverVID.hasTcp = true
*.serverVID.numApps = 1
*.serverVID.app[0].typename = "TcpGenericServerApp"
*.serverVID.app[0].localAddress = "" # local address; may be left empty ("")
*.serverVID.app[0].localPort = 1042 # localPort number to listen on
*.serverVID.app[0].replyDelay = 0s #
*.serverVID.app[0].stopOperationExtraTime = -1s # extra time after lifecycle stop operation finished
*.serverVID.app[0].stopOperationTimeout  = 2s # timeout value for lifecycle stop operation

# Live Video client
**.hostLVD[*].hasTcp = true
**.hostLVD[*].app[0].typename = "TCPLiveVideoStreamCliAppLite"
**.hostLVD[*].app[0].localAddress = "" # may be left empty ("")
**.hostLVD[*].app[0].localPort = -1 # port number to listen on
**.hostLVD[*].app[0].connectAddress = "serverLVD" # server address (may be symbolic)
**.hostLVD[*].app[0].connectPort = 1043 # port number to connect to
**.hostLVD[*].app[0].dataTransferMode = "object"
**.hostLVD[*].app[0].startTime = uniform(0.01s,1s) # time first session begins
**.hostLVD[*].app[0].stopTime = -1s # time of finish sending, 0 means infinity
**.hostLVD[*].app[0].idleInterval = 1s
**.hostLVD[*].app[0].requestLength = 200B # length of a request
**.hostLVD[*].app[0].reconnectInterval = 1s # if connection breaks, waits this much before trying to reconnect
**.hostLVD[*].app[0].numRequestsPerSession = 1 # number of requests sent per session
**.hostLVD[*].app[0].thinkTime = 1s # time gap between requests
**.hostLVD[*].app[0].video_resolution = "240 360 480 720 1080" # how many kbits are required for 1 second of video for each representation (quality levels)
**.hostLVD[*].app[0].manifest_size = 100000
**.hostLVD[*].app[0].video_buffer_max_length = 6s # buffer max length in seconds
**.hostLVD[*].app[0].video_duration = int(uniform(40s,70s)) # video length in seconds
**.hostLVD[*].app[0].segment_length = 1s # video segment length in seconds
**.hostLVD[*].app[0].useFlexibleBitrate = "flexible"
**.hostLVD[*].app[0].video_type = "live"
**.hostLVD[*].app[0].delay_threshold = 4
**.hostLVD[*].app[0].speedup_rate = 1.05

# Live Video server
*.serverLVD.hasTcp = true
*.serverLVD.numApps = 1
*.serverLVD.app[0].typename = "TcpGenericServerApp"
*.serverLVD.app[0].localAddress = "" # local address; may be left empty ("")
*.serverLVD.app[0].localPort = 1043 # localPort number to listen on
*.serverLVD.app[0].replyDelay = 0s #
*.serverLVD.app[0].stopOperationExtraTime = -1s # extra time after lifecycle stop operation finished
*.serverLVD.app[0].stopOperationTimeout  = 2s # timeout value for lifecycle stop operation

# Remote Shell Client
**.hostSSH[*].hasTcp = true
**.hostSSH[*].app[0].typename = "TcpSimpleSshAppV2lite"
**.hostSSH[*].app[0].localAddress = "" # local address or empty ("")
**.hostSSH[*].app[0].localPort = -1 # local port number
**.hostSSH[*].app[0].connectAddress = "serverSSH" # server address (may be symbolic)
**.hostSSH[*].app[0].connectPort = 22  # port number to connect to
**.hostSSH[*].app[0].startTime = uniform(0.01s,1s) # time first session begins
**.hostSSH[*].app[0].stopTime = -1s # time of finishing sending, negative values mean forever
**.hostSSH[*].app[0].numCommands = 1 # user types this many commands in a session
**.hostSSH[*].app[0].commandLength = 10B # commands are this many characters (plus Enter)
**.hostSSH[*].app[0].keyPressDelay = 0.05s # delay between keypresses
**.hostSSH[*].app[0].commandOutputLength = 500B # commands produce this much output
**.hostSSH[*].app[0].thinkTime = 1s # user waits this much before starting to type new command
**.hostSSH[*].app[0].idleInterval = 1s # time gap between sessions
**.hostSSH[*].app[0].reconnectInterval = 1s # if connection breaks, user waits this much before trying to reconnect
**.hostSSH[*].app[0].stopOperationExtraTime = -1s # extra time after lifecycle stop operation finished
**.hostSSH[*].app[0].stopOperationTimeout = 2s # timeout value for lifecycle stop operation

# SSH server
*.serverSSH.hasTcp = true
*.serverSSH.numApps = 1
*.serverSSH.app[*].typename = "TcpGenericServerApp"
*.serverSSH.app[*].localAddress = "" # local address; may be left empty ("")
*.serverSSH.app[*].localPort = 22 # localPort number to listen on
*.serverSSH.app[*].replyDelay = 0s #
*.serverSSH.app[*].stopOperationExtraTime = -1s # extra time after lifecycle stop operation finished
*.serverSSH.app[*].stopOperationTimeout  = 2s # timeout value for lifecycle stop operation

# VoIP receiver
**.hostVIP[*].hasUdp = true
**.hostVIP[*].app[0].typename = "SimpleVoipReceiver"
**.hostVIP[*].app[0].localPort = 2000
**.hostVIP[*].app[0].emodelIe = 5 # Equipment impairment factor
**.hostVIP[*].app[0].emodelBpl = 10 # Packet-loss robustness factor
**.hostVIP[*].app[0].emodelA = 5 # Advantage factor
**.hostVIP[*].app[0].emodelRo = 93.2 # Basic signal-to-noise ratio
**.hostVIP[*].app[0].playoutDelay = 20ms # initial delay for beginning playout after receiving the first packet
**.hostVIP[*].app[0].adaptivePlayoutDelay = false # if true, adjust playoutDelay after each talkspurt
**.hostVIP[*].app[0].bufferSpace = 20 # buffer size in packets
**.hostVIP[*].app[0].mosSpareTime = 1s # spare time before calculating MOS (after calculated playout time of last packet)

# VoIP sender
**.serverVIP.hasUdp = true
**.serverVIP.numApps = nVIP
**.serverVIP.app[*].typename = "SimpleVoipSender"
**.serverVIP.app[*].localPort = -1
**.serverVIP.app[*].destPort = 2000
**.serverVIP.app[*].destAddress = "hostVIP[" + string(index()) + "]"
**.serverVIP.app[*].talkPacketSize = 40B # size of talk packets in bytes
**.serverVIP.app[*].talkspurtDuration = weibull(1.423s, 0.824s)
**.serverVIP.app[*].silenceDuration = weibull(0.899s, 1.089s)
**.serverVIP.app[*].packetizationInterval = 20ms # interval between sending voice packets
**.serverVIP.app[*].startTime = uniform(0.01s,1s) # time of start sending
**.serverVIP.app[*].stopTime = -1s # time of end of sending, -1 means forever


[Config qosOnlyBase_R100_Q35_M100_C100]
description = "Configuration for qosOnlyBase_R100_Q35_M100_C100. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 1.0"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnlyBase_R100_Q35_M100_C100Routing.xml")

*.nVID = 47 # Number of video clients
*.nLVD = 19 # Number of live video client
*.nFDO = 5 # Number of file download clients
*.nSSH = 6 # Number of SSH clients
*.nVIP = 30 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 107
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnlyBase_R100_Q35_M100_C100HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16);sourceAddress(10.0.0.20);sourceAddress(10.0.0.24);sourceAddress(10.0.0.28);sourceAddress(10.0.0.32);sourceAddress(10.0.0.36);sourceAddress(10.0.0.40);sourceAddress(10.0.0.44);sourceAddress(10.0.0.48);sourceAddress(10.0.0.52);sourceAddress(10.0.0.56);sourceAddress(10.0.0.60);sourceAddress(10.0.0.64);sourceAddress(10.0.0.68);sourceAddress(10.0.0.72);sourceAddress(10.0.0.76);sourceAddress(10.0.0.80);sourceAddress(10.0.0.84);sourceAddress(10.0.0.88);sourceAddress(10.0.0.92);sourceAddress(10.0.0.96);sourceAddress(10.0.0.100);sourceAddress(10.0.0.104);sourceAddress(10.0.0.108);sourceAddress(10.0.0.112);sourceAddress(10.0.0.116);sourceAddress(10.0.0.120);sourceAddress(10.0.0.124);sourceAddress(10.0.0.128);sourceAddress(10.0.0.132);sourceAddress(10.0.0.136);sourceAddress(10.0.0.140);sourceAddress(10.0.0.144);sourceAddress(10.0.0.148);sourceAddress(10.0.0.152);sourceAddress(10.0.0.156);sourceAddress(10.0.0.160);sourceAddress(10.0.0.164);sourceAddress(10.0.0.168);sourceAddress(10.0.0.172);sourceAddress(10.0.0.176);sourceAddress(10.0.0.180);sourceAddress(10.0.0.184);sourceAddress(10.1.0.0);sourceAddress(10.1.0.4);sourceAddress(10.1.0.8);sourceAddress(10.1.0.12);sourceAddress(10.1.0.16);sourceAddress(10.1.0.20);sourceAddress(10.1.0.24);sourceAddress(10.1.0.28);sourceAddress(10.1.0.32);sourceAddress(10.1.0.36);sourceAddress(10.1.0.40);sourceAddress(10.1.0.44);sourceAddress(10.1.0.48);sourceAddress(10.1.0.52);sourceAddress(10.1.0.56);sourceAddress(10.1.0.60);sourceAddress(10.1.0.64);sourceAddress(10.1.0.68);sourceAddress(10.1.0.72);sourceAddress(10.2.0.0);sourceAddress(10.2.0.4);sourceAddress(10.2.0.8);sourceAddress(10.2.0.12);sourceAddress(10.2.0.16);sourceAddress(10.3.0.0);sourceAddress(10.3.0.4);sourceAddress(10.3.0.8);sourceAddress(10.3.0.12);sourceAddress(10.3.0.16);sourceAddress(10.3.0.20);sourceAddress(10.3.0.24);sourceAddress(10.3.0.28);sourceAddress(10.3.0.32);sourceAddress(10.3.0.36);sourceAddress(10.3.0.40);sourceAddress(10.3.0.44);sourceAddress(10.3.0.48);sourceAddress(10.3.0.52);sourceAddress(10.3.0.56);sourceAddress(10.3.0.60);sourceAddress(10.3.0.64);sourceAddress(10.3.0.68);sourceAddress(10.3.0.72);sourceAddress(10.3.0.76);sourceAddress(10.3.0.80);sourceAddress(10.3.0.84);sourceAddress(10.3.0.88);sourceAddress(10.3.0.92);sourceAddress(10.3.0.96);sourceAddress(10.3.0.100);sourceAddress(10.3.0.104);sourceAddress(10.3.0.108);sourceAddress(10.3.0.112);sourceAddress(10.3.0.116);sourceAddress(10.4.0.0);sourceAddress(10.4.0.4);sourceAddress(10.4.0.8);sourceAddress(10.4.0.12);sourceAddress(10.4.0.16);sourceAddress(10.4.0.20)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16);destinationAddress(10.0.0.20);destinationAddress(10.0.0.24);destinationAddress(10.0.0.28);destinationAddress(10.0.0.32);destinationAddress(10.0.0.36);destinationAddress(10.0.0.40);destinationAddress(10.0.0.44);destinationAddress(10.0.0.48);destinationAddress(10.0.0.52);destinationAddress(10.0.0.56);destinationAddress(10.0.0.60);destinationAddress(10.0.0.64);destinationAddress(10.0.0.68);destinationAddress(10.0.0.72);destinationAddress(10.0.0.76);destinationAddress(10.0.0.80);destinationAddress(10.0.0.84);destinationAddress(10.0.0.88);destinationAddress(10.0.0.92);destinationAddress(10.0.0.96);destinationAddress(10.0.0.100);destinationAddress(10.0.0.104);destinationAddress(10.0.0.108);destinationAddress(10.0.0.112);destinationAddress(10.0.0.116);destinationAddress(10.0.0.120);destinationAddress(10.0.0.124);destinationAddress(10.0.0.128);destinationAddress(10.0.0.132);destinationAddress(10.0.0.136);destinationAddress(10.0.0.140);destinationAddress(10.0.0.144);destinationAddress(10.0.0.148);destinationAddress(10.0.0.152);destinationAddress(10.0.0.156);destinationAddress(10.0.0.160);destinationAddress(10.0.0.164);destinationAddress(10.0.0.168);destinationAddress(10.0.0.172);destinationAddress(10.0.0.176);destinationAddress(10.0.0.180);destinationAddress(10.0.0.184);destinationAddress(10.1.0.0);destinationAddress(10.1.0.4);destinationAddress(10.1.0.8);destinationAddress(10.1.0.12);destinationAddress(10.1.0.16);destinationAddress(10.1.0.20);destinationAddress(10.1.0.24);destinationAddress(10.1.0.28);destinationAddress(10.1.0.32);destinationAddress(10.1.0.36);destinationAddress(10.1.0.40);destinationAddress(10.1.0.44);destinationAddress(10.1.0.48);destinationAddress(10.1.0.52);destinationAddress(10.1.0.56);destinationAddress(10.1.0.60);destinationAddress(10.1.0.64);destinationAddress(10.1.0.68);destinationAddress(10.1.0.72);destinationAddress(10.2.0.0);destinationAddress(10.2.0.4);destinationAddress(10.2.0.8);destinationAddress(10.2.0.12);destinationAddress(10.2.0.16);destinationAddress(10.3.0.0);destinationAddress(10.3.0.4);destinationAddress(10.3.0.8);destinationAddress(10.3.0.12);destinationAddress(10.3.0.16);destinationAddress(10.3.0.20);destinationAddress(10.3.0.24);destinationAddress(10.3.0.28);destinationAddress(10.3.0.32);destinationAddress(10.3.0.36);destinationAddress(10.3.0.40);destinationAddress(10.3.0.44);destinationAddress(10.3.0.48);destinationAddress(10.3.0.52);destinationAddress(10.3.0.56);destinationAddress(10.3.0.60);destinationAddress(10.3.0.64);destinationAddress(10.3.0.68);destinationAddress(10.3.0.72);destinationAddress(10.3.0.76);destinationAddress(10.3.0.80);destinationAddress(10.3.0.84);destinationAddress(10.3.0.88);destinationAddress(10.3.0.92);destinationAddress(10.3.0.96);destinationAddress(10.3.0.100);destinationAddress(10.3.0.104);destinationAddress(10.3.0.108);destinationAddress(10.3.0.112);destinationAddress(10.3.0.116);destinationAddress(10.4.0.0);destinationAddress(10.4.0.4);destinationAddress(10.4.0.8);destinationAddress(10.4.0.12);destinationAddress(10.4.0.16);destinationAddress(10.4.0.20)"

**.connFIX0.datarate = 100000Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesHTB_R100_Q35_M100_C100]
description = "Configuration for qosOnly5SlicesHTB_R100_Q35_M100_C100. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 1.0"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesHTB_R100_Q35_M100_C100Routing.xml")

*.nVID = 42 # Number of video clients
*.nLVD = 21 # Number of live video client
*.nFDO = 5 # Number of file download clients
*.nSSH = 5 # Number of SSH clients
*.nVIP = 30 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 103
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesHTB_R100_Q35_M100_C100HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16);sourceAddress(10.0.0.20);sourceAddress(10.0.0.24);sourceAddress(10.0.0.28);sourceAddress(10.0.0.32);sourceAddress(10.0.0.36);sourceAddress(10.0.0.40);sourceAddress(10.0.0.44);sourceAddress(10.0.0.48);sourceAddress(10.0.0.52);sourceAddress(10.0.0.56);sourceAddress(10.0.0.60);sourceAddress(10.0.0.64);sourceAddress(10.0.0.68);sourceAddress(10.0.0.72);sourceAddress(10.0.0.76);sourceAddress(10.0.0.80);sourceAddress(10.0.0.84);sourceAddress(10.0.0.88);sourceAddress(10.0.0.92);sourceAddress(10.0.0.96);sourceAddress(10.0.0.100);sourceAddress(10.0.0.104);sourceAddress(10.0.0.108);sourceAddress(10.0.0.112);sourceAddress(10.0.0.116);sourceAddress(10.0.0.120);sourceAddress(10.0.0.124);sourceAddress(10.0.0.128);sourceAddress(10.0.0.132);sourceAddress(10.0.0.136);sourceAddress(10.0.0.140);sourceAddress(10.0.0.144);sourceAddress(10.0.0.148);sourceAddress(10.0.0.152);sourceAddress(10.0.0.156);sourceAddress(10.0.0.160);sourceAddress(10.0.0.164);sourceAddress(10.1.0.0);sourceAddress(10.1.0.4);sourceAddress(10.1.0.8);sourceAddress(10.1.0.12);sourceAddress(10.1.0.16);sourceAddress(10.1.0.20);sourceAddress(10.1.0.24);sourceAddress(10.1.0.28);sourceAddress(10.1.0.32);sourceAddress(10.1.0.36);sourceAddress(10.1.0.40);sourceAddress(10.1.0.44);sourceAddress(10.1.0.48);sourceAddress(10.1.0.52);sourceAddress(10.1.0.56);sourceAddress(10.1.0.60);sourceAddress(10.1.0.64);sourceAddress(10.1.0.68);sourceAddress(10.1.0.72);sourceAddress(10.1.0.76);sourceAddress(10.1.0.80);sourceAddress(10.2.0.0);sourceAddress(10.2.0.4);sourceAddress(10.2.0.8);sourceAddress(10.2.0.12);sourceAddress(10.2.0.16);sourceAddress(10.3.0.0);sourceAddress(10.3.0.4);sourceAddress(10.3.0.8);sourceAddress(10.3.0.12);sourceAddress(10.3.0.16);sourceAddress(10.3.0.20);sourceAddress(10.3.0.24);sourceAddress(10.3.0.28);sourceAddress(10.3.0.32);sourceAddress(10.3.0.36);sourceAddress(10.3.0.40);sourceAddress(10.3.0.44);sourceAddress(10.3.0.48);sourceAddress(10.3.0.52);sourceAddress(10.3.0.56);sourceAddress(10.3.0.60);sourceAddress(10.3.0.64);sourceAddress(10.3.0.68);sourceAddress(10.3.0.72);sourceAddress(10.3.0.76);sourceAddress(10.3.0.80);sourceAddress(10.3.0.84);sourceAddress(10.3.0.88);sourceAddress(10.3.0.92);sourceAddress(10.3.0.96);sourceAddress(10.3.0.100);sourceAddress(10.3.0.104);sourceAddress(10.3.0.108);sourceAddress(10.3.0.112);sourceAddress(10.3.0.116);sourceAddress(10.4.0.0);sourceAddress(10.4.0.4);sourceAddress(10.4.0.8);sourceAddress(10.4.0.12);sourceAddress(10.4.0.16)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16);destinationAddress(10.0.0.20);destinationAddress(10.0.0.24);destinationAddress(10.0.0.28);destinationAddress(10.0.0.32);destinationAddress(10.0.0.36);destinationAddress(10.0.0.40);destinationAddress(10.0.0.44);destinationAddress(10.0.0.48);destinationAddress(10.0.0.52);destinationAddress(10.0.0.56);destinationAddress(10.0.0.60);destinationAddress(10.0.0.64);destinationAddress(10.0.0.68);destinationAddress(10.0.0.72);destinationAddress(10.0.0.76);destinationAddress(10.0.0.80);destinationAddress(10.0.0.84);destinationAddress(10.0.0.88);destinationAddress(10.0.0.92);destinationAddress(10.0.0.96);destinationAddress(10.0.0.100);destinationAddress(10.0.0.104);destinationAddress(10.0.0.108);destinationAddress(10.0.0.112);destinationAddress(10.0.0.116);destinationAddress(10.0.0.120);destinationAddress(10.0.0.124);destinationAddress(10.0.0.128);destinationAddress(10.0.0.132);destinationAddress(10.0.0.136);destinationAddress(10.0.0.140);destinationAddress(10.0.0.144);destinationAddress(10.0.0.148);destinationAddress(10.0.0.152);destinationAddress(10.0.0.156);destinationAddress(10.0.0.160);destinationAddress(10.0.0.164);destinationAddress(10.1.0.0);destinationAddress(10.1.0.4);destinationAddress(10.1.0.8);destinationAddress(10.1.0.12);destinationAddress(10.1.0.16);destinationAddress(10.1.0.20);destinationAddress(10.1.0.24);destinationAddress(10.1.0.28);destinationAddress(10.1.0.32);destinationAddress(10.1.0.36);destinationAddress(10.1.0.40);destinationAddress(10.1.0.44);destinationAddress(10.1.0.48);destinationAddress(10.1.0.52);destinationAddress(10.1.0.56);destinationAddress(10.1.0.60);destinationAddress(10.1.0.64);destinationAddress(10.1.0.68);destinationAddress(10.1.0.72);destinationAddress(10.1.0.76);destinationAddress(10.1.0.80);destinationAddress(10.2.0.0);destinationAddress(10.2.0.4);destinationAddress(10.2.0.8);destinationAddress(10.2.0.12);destinationAddress(10.2.0.16);destinationAddress(10.3.0.0);destinationAddress(10.3.0.4);destinationAddress(10.3.0.8);destinationAddress(10.3.0.12);destinationAddress(10.3.0.16);destinationAddress(10.3.0.20);destinationAddress(10.3.0.24);destinationAddress(10.3.0.28);destinationAddress(10.3.0.32);destinationAddress(10.3.0.36);destinationAddress(10.3.0.40);destinationAddress(10.3.0.44);destinationAddress(10.3.0.48);destinationAddress(10.3.0.52);destinationAddress(10.3.0.56);destinationAddress(10.3.0.60);destinationAddress(10.3.0.64);destinationAddress(10.3.0.68);destinationAddress(10.3.0.72);destinationAddress(10.3.0.76);destinationAddress(10.3.0.80);destinationAddress(10.3.0.84);destinationAddress(10.3.0.88);destinationAddress(10.3.0.92);destinationAddress(10.3.0.96);destinationAddress(10.3.0.100);destinationAddress(10.3.0.104);destinationAddress(10.3.0.108);destinationAddress(10.3.0.112);destinationAddress(10.3.0.116);destinationAddress(10.4.0.0);destinationAddress(10.4.0.4);destinationAddress(10.4.0.8);destinationAddress(10.4.0.12);destinationAddress(10.4.0.16)"

**.connFIX0.datarate = 100000Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesNoHTBVIDSlice_R100_Q35_M100_C100]
description = "Configuration for qosOnly5SlicesNoHTBVIDSlice_R100_Q35_M100_C100. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 1.0"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesNoHTBVIDSlice_R100_Q35_M100_C100Routing.xml")

*.nVID = 42 # Number of video clients
*.nLVD = 0 # Number of live video client
*.nFDO = 0 # Number of file download clients
*.nSSH = 0 # Number of SSH clients
*.nVIP = 0 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 42
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesNoHTBVIDSlice_R100_Q35_M100_C100HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16);sourceAddress(10.0.0.20);sourceAddress(10.0.0.24);sourceAddress(10.0.0.28);sourceAddress(10.0.0.32);sourceAddress(10.0.0.36);sourceAddress(10.0.0.40);sourceAddress(10.0.0.44);sourceAddress(10.0.0.48);sourceAddress(10.0.0.52);sourceAddress(10.0.0.56);sourceAddress(10.0.0.60);sourceAddress(10.0.0.64);sourceAddress(10.0.0.68);sourceAddress(10.0.0.72);sourceAddress(10.0.0.76);sourceAddress(10.0.0.80);sourceAddress(10.0.0.84);sourceAddress(10.0.0.88);sourceAddress(10.0.0.92);sourceAddress(10.0.0.96);sourceAddress(10.0.0.100);sourceAddress(10.0.0.104);sourceAddress(10.0.0.108);sourceAddress(10.0.0.112);sourceAddress(10.0.0.116);sourceAddress(10.0.0.120);sourceAddress(10.0.0.124);sourceAddress(10.0.0.128);sourceAddress(10.0.0.132);sourceAddress(10.0.0.136);sourceAddress(10.0.0.140);sourceAddress(10.0.0.144);sourceAddress(10.0.0.148);sourceAddress(10.0.0.152);sourceAddress(10.0.0.156);sourceAddress(10.0.0.160);sourceAddress(10.0.0.164)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16);destinationAddress(10.0.0.20);destinationAddress(10.0.0.24);destinationAddress(10.0.0.28);destinationAddress(10.0.0.32);destinationAddress(10.0.0.36);destinationAddress(10.0.0.40);destinationAddress(10.0.0.44);destinationAddress(10.0.0.48);destinationAddress(10.0.0.52);destinationAddress(10.0.0.56);destinationAddress(10.0.0.60);destinationAddress(10.0.0.64);destinationAddress(10.0.0.68);destinationAddress(10.0.0.72);destinationAddress(10.0.0.76);destinationAddress(10.0.0.80);destinationAddress(10.0.0.84);destinationAddress(10.0.0.88);destinationAddress(10.0.0.92);destinationAddress(10.0.0.96);destinationAddress(10.0.0.100);destinationAddress(10.0.0.104);destinationAddress(10.0.0.108);destinationAddress(10.0.0.112);destinationAddress(10.0.0.116);destinationAddress(10.0.0.120);destinationAddress(10.0.0.124);destinationAddress(10.0.0.128);destinationAddress(10.0.0.132);destinationAddress(10.0.0.136);destinationAddress(10.0.0.140);destinationAddress(10.0.0.144);destinationAddress(10.0.0.148);destinationAddress(10.0.0.152);destinationAddress(10.0.0.156);destinationAddress(10.0.0.160);destinationAddress(10.0.0.164)"

**.connFIX0.datarate = 47991Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesNoHTBLVDSlice_R100_Q35_M100_C100]
description = "Configuration for qosOnly5SlicesNoHTBLVDSlice_R100_Q35_M100_C100. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 1.0"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesNoHTBLVDSlice_R100_Q35_M100_C100Routing.xml")

*.nVID = 0 # Number of video clients
*.nLVD = 21 # Number of live video client
*.nFDO = 0 # Number of file download clients
*.nSSH = 0 # Number of SSH clients
*.nVIP = 0 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 21
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesNoHTBLVDSlice_R100_Q35_M100_C100HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16);sourceAddress(10.0.0.20);sourceAddress(10.0.0.24);sourceAddress(10.0.0.28);sourceAddress(10.0.0.32);sourceAddress(10.0.0.36);sourceAddress(10.0.0.40);sourceAddress(10.0.0.44);sourceAddress(10.0.0.48);sourceAddress(10.0.0.52);sourceAddress(10.0.0.56);sourceAddress(10.0.0.60);sourceAddress(10.0.0.64);sourceAddress(10.0.0.68);sourceAddress(10.0.0.72);sourceAddress(10.0.0.76);sourceAddress(10.0.0.80)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16);destinationAddress(10.0.0.20);destinationAddress(10.0.0.24);destinationAddress(10.0.0.28);destinationAddress(10.0.0.32);destinationAddress(10.0.0.36);destinationAddress(10.0.0.40);destinationAddress(10.0.0.44);destinationAddress(10.0.0.48);destinationAddress(10.0.0.52);destinationAddress(10.0.0.56);destinationAddress(10.0.0.60);destinationAddress(10.0.0.64);destinationAddress(10.0.0.68);destinationAddress(10.0.0.72);destinationAddress(10.0.0.76);destinationAddress(10.0.0.80)"

**.connFIX0.datarate = 38993Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesNoHTBFDOSlice_R100_Q35_M100_C100]
description = "Configuration for qosOnly5SlicesNoHTBFDOSlice_R100_Q35_M100_C100. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 1.0"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesNoHTBFDOSlice_R100_Q35_M100_C100Routing.xml")

*.nVID = 0 # Number of video clients
*.nLVD = 0 # Number of live video client
*.nFDO = 5 # Number of file download clients
*.nSSH = 0 # Number of SSH clients
*.nVIP = 0 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 5
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesNoHTBFDOSlice_R100_Q35_M100_C100HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16)"

**.connFIX0.datarate = 11997Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesNoHTBVIPSlice_R100_Q35_M100_C100]
description = "Configuration for qosOnly5SlicesNoHTBVIPSlice_R100_Q35_M100_C100. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 1.0"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesNoHTBVIPSlice_R100_Q35_M100_C100Routing.xml")

*.nVID = 0 # Number of video clients
*.nLVD = 0 # Number of live video client
*.nFDO = 0 # Number of file download clients
*.nSSH = 0 # Number of SSH clients
*.nVIP = 30 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 30
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesNoHTBVIPSlice_R100_Q35_M100_C100HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16);sourceAddress(10.0.0.20);sourceAddress(10.0.0.24);sourceAddress(10.0.0.28);sourceAddress(10.0.0.32);sourceAddress(10.0.0.36);sourceAddress(10.0.0.40);sourceAddress(10.0.0.44);sourceAddress(10.0.0.48);sourceAddress(10.0.0.52);sourceAddress(10.0.0.56);sourceAddress(10.0.0.60);sourceAddress(10.0.0.64);sourceAddress(10.0.0.68);sourceAddress(10.0.0.72);sourceAddress(10.0.0.76);sourceAddress(10.0.0.80);sourceAddress(10.0.0.84);sourceAddress(10.0.0.88);sourceAddress(10.0.0.92);sourceAddress(10.0.0.96);sourceAddress(10.0.0.100);sourceAddress(10.0.0.104);sourceAddress(10.0.0.108);sourceAddress(10.0.0.112);sourceAddress(10.0.0.116)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16);destinationAddress(10.0.0.20);destinationAddress(10.0.0.24);destinationAddress(10.0.0.28);destinationAddress(10.0.0.32);destinationAddress(10.0.0.36);destinationAddress(10.0.0.40);destinationAddress(10.0.0.44);destinationAddress(10.0.0.48);destinationAddress(10.0.0.52);destinationAddress(10.0.0.56);destinationAddress(10.0.0.60);destinationAddress(10.0.0.64);destinationAddress(10.0.0.68);destinationAddress(10.0.0.72);destinationAddress(10.0.0.76);destinationAddress(10.0.0.80);destinationAddress(10.0.0.84);destinationAddress(10.0.0.88);destinationAddress(10.0.0.92);destinationAddress(10.0.0.96);destinationAddress(10.0.0.100);destinationAddress(10.0.0.104);destinationAddress(10.0.0.108);destinationAddress(10.0.0.112);destinationAddress(10.0.0.116)"

**.connFIX0.datarate = 964Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesNoHTBSSHSlice_R100_Q35_M100_C100]
description = "Configuration for qosOnly5SlicesNoHTBSSHSlice_R100_Q35_M100_C100. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 1.0"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesNoHTBSSHSlice_R100_Q35_M100_C100Routing.xml")

*.nVID = 0 # Number of video clients
*.nLVD = 0 # Number of live video client
*.nFDO = 0 # Number of file download clients
*.nSSH = 5 # Number of SSH clients
*.nVIP = 0 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 5
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesNoHTBSSHSlice_R100_Q35_M100_C100HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16)"

**.connFIX0.datarate = 53Kbps
**.connFIX0.delay = 40ms


[Config qosOnlyBase_R100_Q35_M100_C125]
description = "Configuration for qosOnlyBase_R100_Q35_M100_C125. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 1.25"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnlyBase_R100_Q35_M100_C125Routing.xml")

*.nVID = 47 # Number of video clients
*.nLVD = 19 # Number of live video client
*.nFDO = 5 # Number of file download clients
*.nSSH = 6 # Number of SSH clients
*.nVIP = 30 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 107
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnlyBase_R100_Q35_M100_C125HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16);sourceAddress(10.0.0.20);sourceAddress(10.0.0.24);sourceAddress(10.0.0.28);sourceAddress(10.0.0.32);sourceAddress(10.0.0.36);sourceAddress(10.0.0.40);sourceAddress(10.0.0.44);sourceAddress(10.0.0.48);sourceAddress(10.0.0.52);sourceAddress(10.0.0.56);sourceAddress(10.0.0.60);sourceAddress(10.0.0.64);sourceAddress(10.0.0.68);sourceAddress(10.0.0.72);sourceAddress(10.0.0.76);sourceAddress(10.0.0.80);sourceAddress(10.0.0.84);sourceAddress(10.0.0.88);sourceAddress(10.0.0.92);sourceAddress(10.0.0.96);sourceAddress(10.0.0.100);sourceAddress(10.0.0.104);sourceAddress(10.0.0.108);sourceAddress(10.0.0.112);sourceAddress(10.0.0.116);sourceAddress(10.0.0.120);sourceAddress(10.0.0.124);sourceAddress(10.0.0.128);sourceAddress(10.0.0.132);sourceAddress(10.0.0.136);sourceAddress(10.0.0.140);sourceAddress(10.0.0.144);sourceAddress(10.0.0.148);sourceAddress(10.0.0.152);sourceAddress(10.0.0.156);sourceAddress(10.0.0.160);sourceAddress(10.0.0.164);sourceAddress(10.0.0.168);sourceAddress(10.0.0.172);sourceAddress(10.0.0.176);sourceAddress(10.0.0.180);sourceAddress(10.0.0.184);sourceAddress(10.1.0.0);sourceAddress(10.1.0.4);sourceAddress(10.1.0.8);sourceAddress(10.1.0.12);sourceAddress(10.1.0.16);sourceAddress(10.1.0.20);sourceAddress(10.1.0.24);sourceAddress(10.1.0.28);sourceAddress(10.1.0.32);sourceAddress(10.1.0.36);sourceAddress(10.1.0.40);sourceAddress(10.1.0.44);sourceAddress(10.1.0.48);sourceAddress(10.1.0.52);sourceAddress(10.1.0.56);sourceAddress(10.1.0.60);sourceAddress(10.1.0.64);sourceAddress(10.1.0.68);sourceAddress(10.1.0.72);sourceAddress(10.2.0.0);sourceAddress(10.2.0.4);sourceAddress(10.2.0.8);sourceAddress(10.2.0.12);sourceAddress(10.2.0.16);sourceAddress(10.3.0.0);sourceAddress(10.3.0.4);sourceAddress(10.3.0.8);sourceAddress(10.3.0.12);sourceAddress(10.3.0.16);sourceAddress(10.3.0.20);sourceAddress(10.3.0.24);sourceAddress(10.3.0.28);sourceAddress(10.3.0.32);sourceAddress(10.3.0.36);sourceAddress(10.3.0.40);sourceAddress(10.3.0.44);sourceAddress(10.3.0.48);sourceAddress(10.3.0.52);sourceAddress(10.3.0.56);sourceAddress(10.3.0.60);sourceAddress(10.3.0.64);sourceAddress(10.3.0.68);sourceAddress(10.3.0.72);sourceAddress(10.3.0.76);sourceAddress(10.3.0.80);sourceAddress(10.3.0.84);sourceAddress(10.3.0.88);sourceAddress(10.3.0.92);sourceAddress(10.3.0.96);sourceAddress(10.3.0.100);sourceAddress(10.3.0.104);sourceAddress(10.3.0.108);sourceAddress(10.3.0.112);sourceAddress(10.3.0.116);sourceAddress(10.4.0.0);sourceAddress(10.4.0.4);sourceAddress(10.4.0.8);sourceAddress(10.4.0.12);sourceAddress(10.4.0.16);sourceAddress(10.4.0.20)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16);destinationAddress(10.0.0.20);destinationAddress(10.0.0.24);destinationAddress(10.0.0.28);destinationAddress(10.0.0.32);destinationAddress(10.0.0.36);destinationAddress(10.0.0.40);destinationAddress(10.0.0.44);destinationAddress(10.0.0.48);destinationAddress(10.0.0.52);destinationAddress(10.0.0.56);destinationAddress(10.0.0.60);destinationAddress(10.0.0.64);destinationAddress(10.0.0.68);destinationAddress(10.0.0.72);destinationAddress(10.0.0.76);destinationAddress(10.0.0.80);destinationAddress(10.0.0.84);destinationAddress(10.0.0.88);destinationAddress(10.0.0.92);destinationAddress(10.0.0.96);destinationAddress(10.0.0.100);destinationAddress(10.0.0.104);destinationAddress(10.0.0.108);destinationAddress(10.0.0.112);destinationAddress(10.0.0.116);destinationAddress(10.0.0.120);destinationAddress(10.0.0.124);destinationAddress(10.0.0.128);destinationAddress(10.0.0.132);destinationAddress(10.0.0.136);destinationAddress(10.0.0.140);destinationAddress(10.0.0.144);destinationAddress(10.0.0.148);destinationAddress(10.0.0.152);destinationAddress(10.0.0.156);destinationAddress(10.0.0.160);destinationAddress(10.0.0.164);destinationAddress(10.0.0.168);destinationAddress(10.0.0.172);destinationAddress(10.0.0.176);destinationAddress(10.0.0.180);destinationAddress(10.0.0.184);destinationAddress(10.1.0.0);destinationAddress(10.1.0.4);destinationAddress(10.1.0.8);destinationAddress(10.1.0.12);destinationAddress(10.1.0.16);destinationAddress(10.1.0.20);destinationAddress(10.1.0.24);destinationAddress(10.1.0.28);destinationAddress(10.1.0.32);destinationAddress(10.1.0.36);destinationAddress(10.1.0.40);destinationAddress(10.1.0.44);destinationAddress(10.1.0.48);destinationAddress(10.1.0.52);destinationAddress(10.1.0.56);destinationAddress(10.1.0.60);destinationAddress(10.1.0.64);destinationAddress(10.1.0.68);destinationAddress(10.1.0.72);destinationAddress(10.2.0.0);destinationAddress(10.2.0.4);destinationAddress(10.2.0.8);destinationAddress(10.2.0.12);destinationAddress(10.2.0.16);destinationAddress(10.3.0.0);destinationAddress(10.3.0.4);destinationAddress(10.3.0.8);destinationAddress(10.3.0.12);destinationAddress(10.3.0.16);destinationAddress(10.3.0.20);destinationAddress(10.3.0.24);destinationAddress(10.3.0.28);destinationAddress(10.3.0.32);destinationAddress(10.3.0.36);destinationAddress(10.3.0.40);destinationAddress(10.3.0.44);destinationAddress(10.3.0.48);destinationAddress(10.3.0.52);destinationAddress(10.3.0.56);destinationAddress(10.3.0.60);destinationAddress(10.3.0.64);destinationAddress(10.3.0.68);destinationAddress(10.3.0.72);destinationAddress(10.3.0.76);destinationAddress(10.3.0.80);destinationAddress(10.3.0.84);destinationAddress(10.3.0.88);destinationAddress(10.3.0.92);destinationAddress(10.3.0.96);destinationAddress(10.3.0.100);destinationAddress(10.3.0.104);destinationAddress(10.3.0.108);destinationAddress(10.3.0.112);destinationAddress(10.3.0.116);destinationAddress(10.4.0.0);destinationAddress(10.4.0.4);destinationAddress(10.4.0.8);destinationAddress(10.4.0.12);destinationAddress(10.4.0.16);destinationAddress(10.4.0.20)"

**.connFIX0.datarate = 100000Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesHTB_R100_Q35_M100_C125]
description = "Configuration for qosOnly5SlicesHTB_R100_Q35_M100_C125. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 1.25"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesHTB_R100_Q35_M100_C125Routing.xml")

*.nVID = 42 # Number of video clients
*.nLVD = 21 # Number of live video client
*.nFDO = 5 # Number of file download clients
*.nSSH = 5 # Number of SSH clients
*.nVIP = 30 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 103
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesHTB_R100_Q35_M100_C125HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16);sourceAddress(10.0.0.20);sourceAddress(10.0.0.24);sourceAddress(10.0.0.28);sourceAddress(10.0.0.32);sourceAddress(10.0.0.36);sourceAddress(10.0.0.40);sourceAddress(10.0.0.44);sourceAddress(10.0.0.48);sourceAddress(10.0.0.52);sourceAddress(10.0.0.56);sourceAddress(10.0.0.60);sourceAddress(10.0.0.64);sourceAddress(10.0.0.68);sourceAddress(10.0.0.72);sourceAddress(10.0.0.76);sourceAddress(10.0.0.80);sourceAddress(10.0.0.84);sourceAddress(10.0.0.88);sourceAddress(10.0.0.92);sourceAddress(10.0.0.96);sourceAddress(10.0.0.100);sourceAddress(10.0.0.104);sourceAddress(10.0.0.108);sourceAddress(10.0.0.112);sourceAddress(10.0.0.116);sourceAddress(10.0.0.120);sourceAddress(10.0.0.124);sourceAddress(10.0.0.128);sourceAddress(10.0.0.132);sourceAddress(10.0.0.136);sourceAddress(10.0.0.140);sourceAddress(10.0.0.144);sourceAddress(10.0.0.148);sourceAddress(10.0.0.152);sourceAddress(10.0.0.156);sourceAddress(10.0.0.160);sourceAddress(10.0.0.164);sourceAddress(10.1.0.0);sourceAddress(10.1.0.4);sourceAddress(10.1.0.8);sourceAddress(10.1.0.12);sourceAddress(10.1.0.16);sourceAddress(10.1.0.20);sourceAddress(10.1.0.24);sourceAddress(10.1.0.28);sourceAddress(10.1.0.32);sourceAddress(10.1.0.36);sourceAddress(10.1.0.40);sourceAddress(10.1.0.44);sourceAddress(10.1.0.48);sourceAddress(10.1.0.52);sourceAddress(10.1.0.56);sourceAddress(10.1.0.60);sourceAddress(10.1.0.64);sourceAddress(10.1.0.68);sourceAddress(10.1.0.72);sourceAddress(10.1.0.76);sourceAddress(10.1.0.80);sourceAddress(10.2.0.0);sourceAddress(10.2.0.4);sourceAddress(10.2.0.8);sourceAddress(10.2.0.12);sourceAddress(10.2.0.16);sourceAddress(10.3.0.0);sourceAddress(10.3.0.4);sourceAddress(10.3.0.8);sourceAddress(10.3.0.12);sourceAddress(10.3.0.16);sourceAddress(10.3.0.20);sourceAddress(10.3.0.24);sourceAddress(10.3.0.28);sourceAddress(10.3.0.32);sourceAddress(10.3.0.36);sourceAddress(10.3.0.40);sourceAddress(10.3.0.44);sourceAddress(10.3.0.48);sourceAddress(10.3.0.52);sourceAddress(10.3.0.56);sourceAddress(10.3.0.60);sourceAddress(10.3.0.64);sourceAddress(10.3.0.68);sourceAddress(10.3.0.72);sourceAddress(10.3.0.76);sourceAddress(10.3.0.80);sourceAddress(10.3.0.84);sourceAddress(10.3.0.88);sourceAddress(10.3.0.92);sourceAddress(10.3.0.96);sourceAddress(10.3.0.100);sourceAddress(10.3.0.104);sourceAddress(10.3.0.108);sourceAddress(10.3.0.112);sourceAddress(10.3.0.116);sourceAddress(10.4.0.0);sourceAddress(10.4.0.4);sourceAddress(10.4.0.8);sourceAddress(10.4.0.12);sourceAddress(10.4.0.16)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16);destinationAddress(10.0.0.20);destinationAddress(10.0.0.24);destinationAddress(10.0.0.28);destinationAddress(10.0.0.32);destinationAddress(10.0.0.36);destinationAddress(10.0.0.40);destinationAddress(10.0.0.44);destinationAddress(10.0.0.48);destinationAddress(10.0.0.52);destinationAddress(10.0.0.56);destinationAddress(10.0.0.60);destinationAddress(10.0.0.64);destinationAddress(10.0.0.68);destinationAddress(10.0.0.72);destinationAddress(10.0.0.76);destinationAddress(10.0.0.80);destinationAddress(10.0.0.84);destinationAddress(10.0.0.88);destinationAddress(10.0.0.92);destinationAddress(10.0.0.96);destinationAddress(10.0.0.100);destinationAddress(10.0.0.104);destinationAddress(10.0.0.108);destinationAddress(10.0.0.112);destinationAddress(10.0.0.116);destinationAddress(10.0.0.120);destinationAddress(10.0.0.124);destinationAddress(10.0.0.128);destinationAddress(10.0.0.132);destinationAddress(10.0.0.136);destinationAddress(10.0.0.140);destinationAddress(10.0.0.144);destinationAddress(10.0.0.148);destinationAddress(10.0.0.152);destinationAddress(10.0.0.156);destinationAddress(10.0.0.160);destinationAddress(10.0.0.164);destinationAddress(10.1.0.0);destinationAddress(10.1.0.4);destinationAddress(10.1.0.8);destinationAddress(10.1.0.12);destinationAddress(10.1.0.16);destinationAddress(10.1.0.20);destinationAddress(10.1.0.24);destinationAddress(10.1.0.28);destinationAddress(10.1.0.32);destinationAddress(10.1.0.36);destinationAddress(10.1.0.40);destinationAddress(10.1.0.44);destinationAddress(10.1.0.48);destinationAddress(10.1.0.52);destinationAddress(10.1.0.56);destinationAddress(10.1.0.60);destinationAddress(10.1.0.64);destinationAddress(10.1.0.68);destinationAddress(10.1.0.72);destinationAddress(10.1.0.76);destinationAddress(10.1.0.80);destinationAddress(10.2.0.0);destinationAddress(10.2.0.4);destinationAddress(10.2.0.8);destinationAddress(10.2.0.12);destinationAddress(10.2.0.16);destinationAddress(10.3.0.0);destinationAddress(10.3.0.4);destinationAddress(10.3.0.8);destinationAddress(10.3.0.12);destinationAddress(10.3.0.16);destinationAddress(10.3.0.20);destinationAddress(10.3.0.24);destinationAddress(10.3.0.28);destinationAddress(10.3.0.32);destinationAddress(10.3.0.36);destinationAddress(10.3.0.40);destinationAddress(10.3.0.44);destinationAddress(10.3.0.48);destinationAddress(10.3.0.52);destinationAddress(10.3.0.56);destinationAddress(10.3.0.60);destinationAddress(10.3.0.64);destinationAddress(10.3.0.68);destinationAddress(10.3.0.72);destinationAddress(10.3.0.76);destinationAddress(10.3.0.80);destinationAddress(10.3.0.84);destinationAddress(10.3.0.88);destinationAddress(10.3.0.92);destinationAddress(10.3.0.96);destinationAddress(10.3.0.100);destinationAddress(10.3.0.104);destinationAddress(10.3.0.108);destinationAddress(10.3.0.112);destinationAddress(10.3.0.116);destinationAddress(10.4.0.0);destinationAddress(10.4.0.4);destinationAddress(10.4.0.8);destinationAddress(10.4.0.12);destinationAddress(10.4.0.16)"

**.connFIX0.datarate = 100000Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesNoHTBVIDSlice_R100_Q35_M100_C125]
description = "Configuration for qosOnly5SlicesNoHTBVIDSlice_R100_Q35_M100_C125. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 1.25"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesNoHTBVIDSlice_R100_Q35_M100_C125Routing.xml")

*.nVID = 42 # Number of video clients
*.nLVD = 0 # Number of live video client
*.nFDO = 0 # Number of file download clients
*.nSSH = 0 # Number of SSH clients
*.nVIP = 0 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 42
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesNoHTBVIDSlice_R100_Q35_M100_C125HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16);sourceAddress(10.0.0.20);sourceAddress(10.0.0.24);sourceAddress(10.0.0.28);sourceAddress(10.0.0.32);sourceAddress(10.0.0.36);sourceAddress(10.0.0.40);sourceAddress(10.0.0.44);sourceAddress(10.0.0.48);sourceAddress(10.0.0.52);sourceAddress(10.0.0.56);sourceAddress(10.0.0.60);sourceAddress(10.0.0.64);sourceAddress(10.0.0.68);sourceAddress(10.0.0.72);sourceAddress(10.0.0.76);sourceAddress(10.0.0.80);sourceAddress(10.0.0.84);sourceAddress(10.0.0.88);sourceAddress(10.0.0.92);sourceAddress(10.0.0.96);sourceAddress(10.0.0.100);sourceAddress(10.0.0.104);sourceAddress(10.0.0.108);sourceAddress(10.0.0.112);sourceAddress(10.0.0.116);sourceAddress(10.0.0.120);sourceAddress(10.0.0.124);sourceAddress(10.0.0.128);sourceAddress(10.0.0.132);sourceAddress(10.0.0.136);sourceAddress(10.0.0.140);sourceAddress(10.0.0.144);sourceAddress(10.0.0.148);sourceAddress(10.0.0.152);sourceAddress(10.0.0.156);sourceAddress(10.0.0.160);sourceAddress(10.0.0.164)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16);destinationAddress(10.0.0.20);destinationAddress(10.0.0.24);destinationAddress(10.0.0.28);destinationAddress(10.0.0.32);destinationAddress(10.0.0.36);destinationAddress(10.0.0.40);destinationAddress(10.0.0.44);destinationAddress(10.0.0.48);destinationAddress(10.0.0.52);destinationAddress(10.0.0.56);destinationAddress(10.0.0.60);destinationAddress(10.0.0.64);destinationAddress(10.0.0.68);destinationAddress(10.0.0.72);destinationAddress(10.0.0.76);destinationAddress(10.0.0.80);destinationAddress(10.0.0.84);destinationAddress(10.0.0.88);destinationAddress(10.0.0.92);destinationAddress(10.0.0.96);destinationAddress(10.0.0.100);destinationAddress(10.0.0.104);destinationAddress(10.0.0.108);destinationAddress(10.0.0.112);destinationAddress(10.0.0.116);destinationAddress(10.0.0.120);destinationAddress(10.0.0.124);destinationAddress(10.0.0.128);destinationAddress(10.0.0.132);destinationAddress(10.0.0.136);destinationAddress(10.0.0.140);destinationAddress(10.0.0.144);destinationAddress(10.0.0.148);destinationAddress(10.0.0.152);destinationAddress(10.0.0.156);destinationAddress(10.0.0.160);destinationAddress(10.0.0.164)"

**.connFIX0.datarate = 47991Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesNoHTBLVDSlice_R100_Q35_M100_C125]
description = "Configuration for qosOnly5SlicesNoHTBLVDSlice_R100_Q35_M100_C125. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 1.25"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesNoHTBLVDSlice_R100_Q35_M100_C125Routing.xml")

*.nVID = 0 # Number of video clients
*.nLVD = 21 # Number of live video client
*.nFDO = 0 # Number of file download clients
*.nSSH = 0 # Number of SSH clients
*.nVIP = 0 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 21
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesNoHTBLVDSlice_R100_Q35_M100_C125HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16);sourceAddress(10.0.0.20);sourceAddress(10.0.0.24);sourceAddress(10.0.0.28);sourceAddress(10.0.0.32);sourceAddress(10.0.0.36);sourceAddress(10.0.0.40);sourceAddress(10.0.0.44);sourceAddress(10.0.0.48);sourceAddress(10.0.0.52);sourceAddress(10.0.0.56);sourceAddress(10.0.0.60);sourceAddress(10.0.0.64);sourceAddress(10.0.0.68);sourceAddress(10.0.0.72);sourceAddress(10.0.0.76);sourceAddress(10.0.0.80)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16);destinationAddress(10.0.0.20);destinationAddress(10.0.0.24);destinationAddress(10.0.0.28);destinationAddress(10.0.0.32);destinationAddress(10.0.0.36);destinationAddress(10.0.0.40);destinationAddress(10.0.0.44);destinationAddress(10.0.0.48);destinationAddress(10.0.0.52);destinationAddress(10.0.0.56);destinationAddress(10.0.0.60);destinationAddress(10.0.0.64);destinationAddress(10.0.0.68);destinationAddress(10.0.0.72);destinationAddress(10.0.0.76);destinationAddress(10.0.0.80)"

**.connFIX0.datarate = 38993Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesNoHTBFDOSlice_R100_Q35_M100_C125]
description = "Configuration for qosOnly5SlicesNoHTBFDOSlice_R100_Q35_M100_C125. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 1.25"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesNoHTBFDOSlice_R100_Q35_M100_C125Routing.xml")

*.nVID = 0 # Number of video clients
*.nLVD = 0 # Number of live video client
*.nFDO = 5 # Number of file download clients
*.nSSH = 0 # Number of SSH clients
*.nVIP = 0 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 5
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesNoHTBFDOSlice_R100_Q35_M100_C125HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16)"

**.connFIX0.datarate = 11997Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesNoHTBVIPSlice_R100_Q35_M100_C125]
description = "Configuration for qosOnly5SlicesNoHTBVIPSlice_R100_Q35_M100_C125. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 1.25"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesNoHTBVIPSlice_R100_Q35_M100_C125Routing.xml")

*.nVID = 0 # Number of video clients
*.nLVD = 0 # Number of live video client
*.nFDO = 0 # Number of file download clients
*.nSSH = 0 # Number of SSH clients
*.nVIP = 30 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 30
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesNoHTBVIPSlice_R100_Q35_M100_C125HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16);sourceAddress(10.0.0.20);sourceAddress(10.0.0.24);sourceAddress(10.0.0.28);sourceAddress(10.0.0.32);sourceAddress(10.0.0.36);sourceAddress(10.0.0.40);sourceAddress(10.0.0.44);sourceAddress(10.0.0.48);sourceAddress(10.0.0.52);sourceAddress(10.0.0.56);sourceAddress(10.0.0.60);sourceAddress(10.0.0.64);sourceAddress(10.0.0.68);sourceAddress(10.0.0.72);sourceAddress(10.0.0.76);sourceAddress(10.0.0.80);sourceAddress(10.0.0.84);sourceAddress(10.0.0.88);sourceAddress(10.0.0.92);sourceAddress(10.0.0.96);sourceAddress(10.0.0.100);sourceAddress(10.0.0.104);sourceAddress(10.0.0.108);sourceAddress(10.0.0.112);sourceAddress(10.0.0.116)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16);destinationAddress(10.0.0.20);destinationAddress(10.0.0.24);destinationAddress(10.0.0.28);destinationAddress(10.0.0.32);destinationAddress(10.0.0.36);destinationAddress(10.0.0.40);destinationAddress(10.0.0.44);destinationAddress(10.0.0.48);destinationAddress(10.0.0.52);destinationAddress(10.0.0.56);destinationAddress(10.0.0.60);destinationAddress(10.0.0.64);destinationAddress(10.0.0.68);destinationAddress(10.0.0.72);destinationAddress(10.0.0.76);destinationAddress(10.0.0.80);destinationAddress(10.0.0.84);destinationAddress(10.0.0.88);destinationAddress(10.0.0.92);destinationAddress(10.0.0.96);destinationAddress(10.0.0.100);destinationAddress(10.0.0.104);destinationAddress(10.0.0.108);destinationAddress(10.0.0.112);destinationAddress(10.0.0.116)"

**.connFIX0.datarate = 964Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesNoHTBSSHSlice_R100_Q35_M100_C125]
description = "Configuration for qosOnly5SlicesNoHTBSSHSlice_R100_Q35_M100_C125. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 1.25"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesNoHTBSSHSlice_R100_Q35_M100_C125Routing.xml")

*.nVID = 0 # Number of video clients
*.nLVD = 0 # Number of live video client
*.nFDO = 0 # Number of file download clients
*.nSSH = 5 # Number of SSH clients
*.nVIP = 0 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 5
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesNoHTBSSHSlice_R100_Q35_M100_C125HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16)"

**.connFIX0.datarate = 53Kbps
**.connFIX0.delay = 40ms


[Config qosOnlyBase_R100_Q35_M100_C150]
description = "Configuration for qosOnlyBase_R100_Q35_M100_C150. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 1.5"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnlyBase_R100_Q35_M100_C150Routing.xml")

*.nVID = 47 # Number of video clients
*.nLVD = 19 # Number of live video client
*.nFDO = 5 # Number of file download clients
*.nSSH = 6 # Number of SSH clients
*.nVIP = 30 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 107
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnlyBase_R100_Q35_M100_C150HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16);sourceAddress(10.0.0.20);sourceAddress(10.0.0.24);sourceAddress(10.0.0.28);sourceAddress(10.0.0.32);sourceAddress(10.0.0.36);sourceAddress(10.0.0.40);sourceAddress(10.0.0.44);sourceAddress(10.0.0.48);sourceAddress(10.0.0.52);sourceAddress(10.0.0.56);sourceAddress(10.0.0.60);sourceAddress(10.0.0.64);sourceAddress(10.0.0.68);sourceAddress(10.0.0.72);sourceAddress(10.0.0.76);sourceAddress(10.0.0.80);sourceAddress(10.0.0.84);sourceAddress(10.0.0.88);sourceAddress(10.0.0.92);sourceAddress(10.0.0.96);sourceAddress(10.0.0.100);sourceAddress(10.0.0.104);sourceAddress(10.0.0.108);sourceAddress(10.0.0.112);sourceAddress(10.0.0.116);sourceAddress(10.0.0.120);sourceAddress(10.0.0.124);sourceAddress(10.0.0.128);sourceAddress(10.0.0.132);sourceAddress(10.0.0.136);sourceAddress(10.0.0.140);sourceAddress(10.0.0.144);sourceAddress(10.0.0.148);sourceAddress(10.0.0.152);sourceAddress(10.0.0.156);sourceAddress(10.0.0.160);sourceAddress(10.0.0.164);sourceAddress(10.0.0.168);sourceAddress(10.0.0.172);sourceAddress(10.0.0.176);sourceAddress(10.0.0.180);sourceAddress(10.0.0.184);sourceAddress(10.1.0.0);sourceAddress(10.1.0.4);sourceAddress(10.1.0.8);sourceAddress(10.1.0.12);sourceAddress(10.1.0.16);sourceAddress(10.1.0.20);sourceAddress(10.1.0.24);sourceAddress(10.1.0.28);sourceAddress(10.1.0.32);sourceAddress(10.1.0.36);sourceAddress(10.1.0.40);sourceAddress(10.1.0.44);sourceAddress(10.1.0.48);sourceAddress(10.1.0.52);sourceAddress(10.1.0.56);sourceAddress(10.1.0.60);sourceAddress(10.1.0.64);sourceAddress(10.1.0.68);sourceAddress(10.1.0.72);sourceAddress(10.2.0.0);sourceAddress(10.2.0.4);sourceAddress(10.2.0.8);sourceAddress(10.2.0.12);sourceAddress(10.2.0.16);sourceAddress(10.3.0.0);sourceAddress(10.3.0.4);sourceAddress(10.3.0.8);sourceAddress(10.3.0.12);sourceAddress(10.3.0.16);sourceAddress(10.3.0.20);sourceAddress(10.3.0.24);sourceAddress(10.3.0.28);sourceAddress(10.3.0.32);sourceAddress(10.3.0.36);sourceAddress(10.3.0.40);sourceAddress(10.3.0.44);sourceAddress(10.3.0.48);sourceAddress(10.3.0.52);sourceAddress(10.3.0.56);sourceAddress(10.3.0.60);sourceAddress(10.3.0.64);sourceAddress(10.3.0.68);sourceAddress(10.3.0.72);sourceAddress(10.3.0.76);sourceAddress(10.3.0.80);sourceAddress(10.3.0.84);sourceAddress(10.3.0.88);sourceAddress(10.3.0.92);sourceAddress(10.3.0.96);sourceAddress(10.3.0.100);sourceAddress(10.3.0.104);sourceAddress(10.3.0.108);sourceAddress(10.3.0.112);sourceAddress(10.3.0.116);sourceAddress(10.4.0.0);sourceAddress(10.4.0.4);sourceAddress(10.4.0.8);sourceAddress(10.4.0.12);sourceAddress(10.4.0.16);sourceAddress(10.4.0.20)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16);destinationAddress(10.0.0.20);destinationAddress(10.0.0.24);destinationAddress(10.0.0.28);destinationAddress(10.0.0.32);destinationAddress(10.0.0.36);destinationAddress(10.0.0.40);destinationAddress(10.0.0.44);destinationAddress(10.0.0.48);destinationAddress(10.0.0.52);destinationAddress(10.0.0.56);destinationAddress(10.0.0.60);destinationAddress(10.0.0.64);destinationAddress(10.0.0.68);destinationAddress(10.0.0.72);destinationAddress(10.0.0.76);destinationAddress(10.0.0.80);destinationAddress(10.0.0.84);destinationAddress(10.0.0.88);destinationAddress(10.0.0.92);destinationAddress(10.0.0.96);destinationAddress(10.0.0.100);destinationAddress(10.0.0.104);destinationAddress(10.0.0.108);destinationAddress(10.0.0.112);destinationAddress(10.0.0.116);destinationAddress(10.0.0.120);destinationAddress(10.0.0.124);destinationAddress(10.0.0.128);destinationAddress(10.0.0.132);destinationAddress(10.0.0.136);destinationAddress(10.0.0.140);destinationAddress(10.0.0.144);destinationAddress(10.0.0.148);destinationAddress(10.0.0.152);destinationAddress(10.0.0.156);destinationAddress(10.0.0.160);destinationAddress(10.0.0.164);destinationAddress(10.0.0.168);destinationAddress(10.0.0.172);destinationAddress(10.0.0.176);destinationAddress(10.0.0.180);destinationAddress(10.0.0.184);destinationAddress(10.1.0.0);destinationAddress(10.1.0.4);destinationAddress(10.1.0.8);destinationAddress(10.1.0.12);destinationAddress(10.1.0.16);destinationAddress(10.1.0.20);destinationAddress(10.1.0.24);destinationAddress(10.1.0.28);destinationAddress(10.1.0.32);destinationAddress(10.1.0.36);destinationAddress(10.1.0.40);destinationAddress(10.1.0.44);destinationAddress(10.1.0.48);destinationAddress(10.1.0.52);destinationAddress(10.1.0.56);destinationAddress(10.1.0.60);destinationAddress(10.1.0.64);destinationAddress(10.1.0.68);destinationAddress(10.1.0.72);destinationAddress(10.2.0.0);destinationAddress(10.2.0.4);destinationAddress(10.2.0.8);destinationAddress(10.2.0.12);destinationAddress(10.2.0.16);destinationAddress(10.3.0.0);destinationAddress(10.3.0.4);destinationAddress(10.3.0.8);destinationAddress(10.3.0.12);destinationAddress(10.3.0.16);destinationAddress(10.3.0.20);destinationAddress(10.3.0.24);destinationAddress(10.3.0.28);destinationAddress(10.3.0.32);destinationAddress(10.3.0.36);destinationAddress(10.3.0.40);destinationAddress(10.3.0.44);destinationAddress(10.3.0.48);destinationAddress(10.3.0.52);destinationAddress(10.3.0.56);destinationAddress(10.3.0.60);destinationAddress(10.3.0.64);destinationAddress(10.3.0.68);destinationAddress(10.3.0.72);destinationAddress(10.3.0.76);destinationAddress(10.3.0.80);destinationAddress(10.3.0.84);destinationAddress(10.3.0.88);destinationAddress(10.3.0.92);destinationAddress(10.3.0.96);destinationAddress(10.3.0.100);destinationAddress(10.3.0.104);destinationAddress(10.3.0.108);destinationAddress(10.3.0.112);destinationAddress(10.3.0.116);destinationAddress(10.4.0.0);destinationAddress(10.4.0.4);destinationAddress(10.4.0.8);destinationAddress(10.4.0.12);destinationAddress(10.4.0.16);destinationAddress(10.4.0.20)"

**.connFIX0.datarate = 100000Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesHTB_R100_Q35_M100_C150]
description = "Configuration for qosOnly5SlicesHTB_R100_Q35_M100_C150. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 1.5"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesHTB_R100_Q35_M100_C150Routing.xml")

*.nVID = 42 # Number of video clients
*.nLVD = 21 # Number of live video client
*.nFDO = 5 # Number of file download clients
*.nSSH = 5 # Number of SSH clients
*.nVIP = 30 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 103
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesHTB_R100_Q35_M100_C150HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16);sourceAddress(10.0.0.20);sourceAddress(10.0.0.24);sourceAddress(10.0.0.28);sourceAddress(10.0.0.32);sourceAddress(10.0.0.36);sourceAddress(10.0.0.40);sourceAddress(10.0.0.44);sourceAddress(10.0.0.48);sourceAddress(10.0.0.52);sourceAddress(10.0.0.56);sourceAddress(10.0.0.60);sourceAddress(10.0.0.64);sourceAddress(10.0.0.68);sourceAddress(10.0.0.72);sourceAddress(10.0.0.76);sourceAddress(10.0.0.80);sourceAddress(10.0.0.84);sourceAddress(10.0.0.88);sourceAddress(10.0.0.92);sourceAddress(10.0.0.96);sourceAddress(10.0.0.100);sourceAddress(10.0.0.104);sourceAddress(10.0.0.108);sourceAddress(10.0.0.112);sourceAddress(10.0.0.116);sourceAddress(10.0.0.120);sourceAddress(10.0.0.124);sourceAddress(10.0.0.128);sourceAddress(10.0.0.132);sourceAddress(10.0.0.136);sourceAddress(10.0.0.140);sourceAddress(10.0.0.144);sourceAddress(10.0.0.148);sourceAddress(10.0.0.152);sourceAddress(10.0.0.156);sourceAddress(10.0.0.160);sourceAddress(10.0.0.164);sourceAddress(10.1.0.0);sourceAddress(10.1.0.4);sourceAddress(10.1.0.8);sourceAddress(10.1.0.12);sourceAddress(10.1.0.16);sourceAddress(10.1.0.20);sourceAddress(10.1.0.24);sourceAddress(10.1.0.28);sourceAddress(10.1.0.32);sourceAddress(10.1.0.36);sourceAddress(10.1.0.40);sourceAddress(10.1.0.44);sourceAddress(10.1.0.48);sourceAddress(10.1.0.52);sourceAddress(10.1.0.56);sourceAddress(10.1.0.60);sourceAddress(10.1.0.64);sourceAddress(10.1.0.68);sourceAddress(10.1.0.72);sourceAddress(10.1.0.76);sourceAddress(10.1.0.80);sourceAddress(10.2.0.0);sourceAddress(10.2.0.4);sourceAddress(10.2.0.8);sourceAddress(10.2.0.12);sourceAddress(10.2.0.16);sourceAddress(10.3.0.0);sourceAddress(10.3.0.4);sourceAddress(10.3.0.8);sourceAddress(10.3.0.12);sourceAddress(10.3.0.16);sourceAddress(10.3.0.20);sourceAddress(10.3.0.24);sourceAddress(10.3.0.28);sourceAddress(10.3.0.32);sourceAddress(10.3.0.36);sourceAddress(10.3.0.40);sourceAddress(10.3.0.44);sourceAddress(10.3.0.48);sourceAddress(10.3.0.52);sourceAddress(10.3.0.56);sourceAddress(10.3.0.60);sourceAddress(10.3.0.64);sourceAddress(10.3.0.68);sourceAddress(10.3.0.72);sourceAddress(10.3.0.76);sourceAddress(10.3.0.80);sourceAddress(10.3.0.84);sourceAddress(10.3.0.88);sourceAddress(10.3.0.92);sourceAddress(10.3.0.96);sourceAddress(10.3.0.100);sourceAddress(10.3.0.104);sourceAddress(10.3.0.108);sourceAddress(10.3.0.112);sourceAddress(10.3.0.116);sourceAddress(10.4.0.0);sourceAddress(10.4.0.4);sourceAddress(10.4.0.8);sourceAddress(10.4.0.12);sourceAddress(10.4.0.16)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16);destinationAddress(10.0.0.20);destinationAddress(10.0.0.24);destinationAddress(10.0.0.28);destinationAddress(10.0.0.32);destinationAddress(10.0.0.36);destinationAddress(10.0.0.40);destinationAddress(10.0.0.44);destinationAddress(10.0.0.48);destinationAddress(10.0.0.52);destinationAddress(10.0.0.56);destinationAddress(10.0.0.60);destinationAddress(10.0.0.64);destinationAddress(10.0.0.68);destinationAddress(10.0.0.72);destinationAddress(10.0.0.76);destinationAddress(10.0.0.80);destinationAddress(10.0.0.84);destinationAddress(10.0.0.88);destinationAddress(10.0.0.92);destinationAddress(10.0.0.96);destinationAddress(10.0.0.100);destinationAddress(10.0.0.104);destinationAddress(10.0.0.108);destinationAddress(10.0.0.112);destinationAddress(10.0.0.116);destinationAddress(10.0.0.120);destinationAddress(10.0.0.124);destinationAddress(10.0.0.128);destinationAddress(10.0.0.132);destinationAddress(10.0.0.136);destinationAddress(10.0.0.140);destinationAddress(10.0.0.144);destinationAddress(10.0.0.148);destinationAddress(10.0.0.152);destinationAddress(10.0.0.156);destinationAddress(10.0.0.160);destinationAddress(10.0.0.164);destinationAddress(10.1.0.0);destinationAddress(10.1.0.4);destinationAddress(10.1.0.8);destinationAddress(10.1.0.12);destinationAddress(10.1.0.16);destinationAddress(10.1.0.20);destinationAddress(10.1.0.24);destinationAddress(10.1.0.28);destinationAddress(10.1.0.32);destinationAddress(10.1.0.36);destinationAddress(10.1.0.40);destinationAddress(10.1.0.44);destinationAddress(10.1.0.48);destinationAddress(10.1.0.52);destinationAddress(10.1.0.56);destinationAddress(10.1.0.60);destinationAddress(10.1.0.64);destinationAddress(10.1.0.68);destinationAddress(10.1.0.72);destinationAddress(10.1.0.76);destinationAddress(10.1.0.80);destinationAddress(10.2.0.0);destinationAddress(10.2.0.4);destinationAddress(10.2.0.8);destinationAddress(10.2.0.12);destinationAddress(10.2.0.16);destinationAddress(10.3.0.0);destinationAddress(10.3.0.4);destinationAddress(10.3.0.8);destinationAddress(10.3.0.12);destinationAddress(10.3.0.16);destinationAddress(10.3.0.20);destinationAddress(10.3.0.24);destinationAddress(10.3.0.28);destinationAddress(10.3.0.32);destinationAddress(10.3.0.36);destinationAddress(10.3.0.40);destinationAddress(10.3.0.44);destinationAddress(10.3.0.48);destinationAddress(10.3.0.52);destinationAddress(10.3.0.56);destinationAddress(10.3.0.60);destinationAddress(10.3.0.64);destinationAddress(10.3.0.68);destinationAddress(10.3.0.72);destinationAddress(10.3.0.76);destinationAddress(10.3.0.80);destinationAddress(10.3.0.84);destinationAddress(10.3.0.88);destinationAddress(10.3.0.92);destinationAddress(10.3.0.96);destinationAddress(10.3.0.100);destinationAddress(10.3.0.104);destinationAddress(10.3.0.108);destinationAddress(10.3.0.112);destinationAddress(10.3.0.116);destinationAddress(10.4.0.0);destinationAddress(10.4.0.4);destinationAddress(10.4.0.8);destinationAddress(10.4.0.12);destinationAddress(10.4.0.16)"

**.connFIX0.datarate = 100000Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesNoHTBVIDSlice_R100_Q35_M100_C150]
description = "Configuration for qosOnly5SlicesNoHTBVIDSlice_R100_Q35_M100_C150. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 1.5"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesNoHTBVIDSlice_R100_Q35_M100_C150Routing.xml")

*.nVID = 42 # Number of video clients
*.nLVD = 0 # Number of live video client
*.nFDO = 0 # Number of file download clients
*.nSSH = 0 # Number of SSH clients
*.nVIP = 0 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 42
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesNoHTBVIDSlice_R100_Q35_M100_C150HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16);sourceAddress(10.0.0.20);sourceAddress(10.0.0.24);sourceAddress(10.0.0.28);sourceAddress(10.0.0.32);sourceAddress(10.0.0.36);sourceAddress(10.0.0.40);sourceAddress(10.0.0.44);sourceAddress(10.0.0.48);sourceAddress(10.0.0.52);sourceAddress(10.0.0.56);sourceAddress(10.0.0.60);sourceAddress(10.0.0.64);sourceAddress(10.0.0.68);sourceAddress(10.0.0.72);sourceAddress(10.0.0.76);sourceAddress(10.0.0.80);sourceAddress(10.0.0.84);sourceAddress(10.0.0.88);sourceAddress(10.0.0.92);sourceAddress(10.0.0.96);sourceAddress(10.0.0.100);sourceAddress(10.0.0.104);sourceAddress(10.0.0.108);sourceAddress(10.0.0.112);sourceAddress(10.0.0.116);sourceAddress(10.0.0.120);sourceAddress(10.0.0.124);sourceAddress(10.0.0.128);sourceAddress(10.0.0.132);sourceAddress(10.0.0.136);sourceAddress(10.0.0.140);sourceAddress(10.0.0.144);sourceAddress(10.0.0.148);sourceAddress(10.0.0.152);sourceAddress(10.0.0.156);sourceAddress(10.0.0.160);sourceAddress(10.0.0.164)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16);destinationAddress(10.0.0.20);destinationAddress(10.0.0.24);destinationAddress(10.0.0.28);destinationAddress(10.0.0.32);destinationAddress(10.0.0.36);destinationAddress(10.0.0.40);destinationAddress(10.0.0.44);destinationAddress(10.0.0.48);destinationAddress(10.0.0.52);destinationAddress(10.0.0.56);destinationAddress(10.0.0.60);destinationAddress(10.0.0.64);destinationAddress(10.0.0.68);destinationAddress(10.0.0.72);destinationAddress(10.0.0.76);destinationAddress(10.0.0.80);destinationAddress(10.0.0.84);destinationAddress(10.0.0.88);destinationAddress(10.0.0.92);destinationAddress(10.0.0.96);destinationAddress(10.0.0.100);destinationAddress(10.0.0.104);destinationAddress(10.0.0.108);destinationAddress(10.0.0.112);destinationAddress(10.0.0.116);destinationAddress(10.0.0.120);destinationAddress(10.0.0.124);destinationAddress(10.0.0.128);destinationAddress(10.0.0.132);destinationAddress(10.0.0.136);destinationAddress(10.0.0.140);destinationAddress(10.0.0.144);destinationAddress(10.0.0.148);destinationAddress(10.0.0.152);destinationAddress(10.0.0.156);destinationAddress(10.0.0.160);destinationAddress(10.0.0.164)"

**.connFIX0.datarate = 47991Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesNoHTBLVDSlice_R100_Q35_M100_C150]
description = "Configuration for qosOnly5SlicesNoHTBLVDSlice_R100_Q35_M100_C150. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 1.5"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesNoHTBLVDSlice_R100_Q35_M100_C150Routing.xml")

*.nVID = 0 # Number of video clients
*.nLVD = 21 # Number of live video client
*.nFDO = 0 # Number of file download clients
*.nSSH = 0 # Number of SSH clients
*.nVIP = 0 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 21
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesNoHTBLVDSlice_R100_Q35_M100_C150HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16);sourceAddress(10.0.0.20);sourceAddress(10.0.0.24);sourceAddress(10.0.0.28);sourceAddress(10.0.0.32);sourceAddress(10.0.0.36);sourceAddress(10.0.0.40);sourceAddress(10.0.0.44);sourceAddress(10.0.0.48);sourceAddress(10.0.0.52);sourceAddress(10.0.0.56);sourceAddress(10.0.0.60);sourceAddress(10.0.0.64);sourceAddress(10.0.0.68);sourceAddress(10.0.0.72);sourceAddress(10.0.0.76);sourceAddress(10.0.0.80)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16);destinationAddress(10.0.0.20);destinationAddress(10.0.0.24);destinationAddress(10.0.0.28);destinationAddress(10.0.0.32);destinationAddress(10.0.0.36);destinationAddress(10.0.0.40);destinationAddress(10.0.0.44);destinationAddress(10.0.0.48);destinationAddress(10.0.0.52);destinationAddress(10.0.0.56);destinationAddress(10.0.0.60);destinationAddress(10.0.0.64);destinationAddress(10.0.0.68);destinationAddress(10.0.0.72);destinationAddress(10.0.0.76);destinationAddress(10.0.0.80)"

**.connFIX0.datarate = 38993Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesNoHTBFDOSlice_R100_Q35_M100_C150]
description = "Configuration for qosOnly5SlicesNoHTBFDOSlice_R100_Q35_M100_C150. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 1.5"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesNoHTBFDOSlice_R100_Q35_M100_C150Routing.xml")

*.nVID = 0 # Number of video clients
*.nLVD = 0 # Number of live video client
*.nFDO = 5 # Number of file download clients
*.nSSH = 0 # Number of SSH clients
*.nVIP = 0 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 5
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesNoHTBFDOSlice_R100_Q35_M100_C150HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16)"

**.connFIX0.datarate = 11997Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesNoHTBVIPSlice_R100_Q35_M100_C150]
description = "Configuration for qosOnly5SlicesNoHTBVIPSlice_R100_Q35_M100_C150. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 1.5"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesNoHTBVIPSlice_R100_Q35_M100_C150Routing.xml")

*.nVID = 0 # Number of video clients
*.nLVD = 0 # Number of live video client
*.nFDO = 0 # Number of file download clients
*.nSSH = 0 # Number of SSH clients
*.nVIP = 30 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 30
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesNoHTBVIPSlice_R100_Q35_M100_C150HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16);sourceAddress(10.0.0.20);sourceAddress(10.0.0.24);sourceAddress(10.0.0.28);sourceAddress(10.0.0.32);sourceAddress(10.0.0.36);sourceAddress(10.0.0.40);sourceAddress(10.0.0.44);sourceAddress(10.0.0.48);sourceAddress(10.0.0.52);sourceAddress(10.0.0.56);sourceAddress(10.0.0.60);sourceAddress(10.0.0.64);sourceAddress(10.0.0.68);sourceAddress(10.0.0.72);sourceAddress(10.0.0.76);sourceAddress(10.0.0.80);sourceAddress(10.0.0.84);sourceAddress(10.0.0.88);sourceAddress(10.0.0.92);sourceAddress(10.0.0.96);sourceAddress(10.0.0.100);sourceAddress(10.0.0.104);sourceAddress(10.0.0.108);sourceAddress(10.0.0.112);sourceAddress(10.0.0.116)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16);destinationAddress(10.0.0.20);destinationAddress(10.0.0.24);destinationAddress(10.0.0.28);destinationAddress(10.0.0.32);destinationAddress(10.0.0.36);destinationAddress(10.0.0.40);destinationAddress(10.0.0.44);destinationAddress(10.0.0.48);destinationAddress(10.0.0.52);destinationAddress(10.0.0.56);destinationAddress(10.0.0.60);destinationAddress(10.0.0.64);destinationAddress(10.0.0.68);destinationAddress(10.0.0.72);destinationAddress(10.0.0.76);destinationAddress(10.0.0.80);destinationAddress(10.0.0.84);destinationAddress(10.0.0.88);destinationAddress(10.0.0.92);destinationAddress(10.0.0.96);destinationAddress(10.0.0.100);destinationAddress(10.0.0.104);destinationAddress(10.0.0.108);destinationAddress(10.0.0.112);destinationAddress(10.0.0.116)"

**.connFIX0.datarate = 964Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesNoHTBSSHSlice_R100_Q35_M100_C150]
description = "Configuration for qosOnly5SlicesNoHTBSSHSlice_R100_Q35_M100_C150. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 1.5"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesNoHTBSSHSlice_R100_Q35_M100_C150Routing.xml")

*.nVID = 0 # Number of video clients
*.nLVD = 0 # Number of live video client
*.nFDO = 0 # Number of file download clients
*.nSSH = 5 # Number of SSH clients
*.nVIP = 0 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 5
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesNoHTBSSHSlice_R100_Q35_M100_C150HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16)"

**.connFIX0.datarate = 53Kbps
**.connFIX0.delay = 40ms


[Config qosOnlyBase_R100_Q35_M100_C175]
description = "Configuration for qosOnlyBase_R100_Q35_M100_C175. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 1.75"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnlyBase_R100_Q35_M100_C175Routing.xml")

*.nVID = 47 # Number of video clients
*.nLVD = 19 # Number of live video client
*.nFDO = 5 # Number of file download clients
*.nSSH = 6 # Number of SSH clients
*.nVIP = 30 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 107
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnlyBase_R100_Q35_M100_C175HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16);sourceAddress(10.0.0.20);sourceAddress(10.0.0.24);sourceAddress(10.0.0.28);sourceAddress(10.0.0.32);sourceAddress(10.0.0.36);sourceAddress(10.0.0.40);sourceAddress(10.0.0.44);sourceAddress(10.0.0.48);sourceAddress(10.0.0.52);sourceAddress(10.0.0.56);sourceAddress(10.0.0.60);sourceAddress(10.0.0.64);sourceAddress(10.0.0.68);sourceAddress(10.0.0.72);sourceAddress(10.0.0.76);sourceAddress(10.0.0.80);sourceAddress(10.0.0.84);sourceAddress(10.0.0.88);sourceAddress(10.0.0.92);sourceAddress(10.0.0.96);sourceAddress(10.0.0.100);sourceAddress(10.0.0.104);sourceAddress(10.0.0.108);sourceAddress(10.0.0.112);sourceAddress(10.0.0.116);sourceAddress(10.0.0.120);sourceAddress(10.0.0.124);sourceAddress(10.0.0.128);sourceAddress(10.0.0.132);sourceAddress(10.0.0.136);sourceAddress(10.0.0.140);sourceAddress(10.0.0.144);sourceAddress(10.0.0.148);sourceAddress(10.0.0.152);sourceAddress(10.0.0.156);sourceAddress(10.0.0.160);sourceAddress(10.0.0.164);sourceAddress(10.0.0.168);sourceAddress(10.0.0.172);sourceAddress(10.0.0.176);sourceAddress(10.0.0.180);sourceAddress(10.0.0.184);sourceAddress(10.1.0.0);sourceAddress(10.1.0.4);sourceAddress(10.1.0.8);sourceAddress(10.1.0.12);sourceAddress(10.1.0.16);sourceAddress(10.1.0.20);sourceAddress(10.1.0.24);sourceAddress(10.1.0.28);sourceAddress(10.1.0.32);sourceAddress(10.1.0.36);sourceAddress(10.1.0.40);sourceAddress(10.1.0.44);sourceAddress(10.1.0.48);sourceAddress(10.1.0.52);sourceAddress(10.1.0.56);sourceAddress(10.1.0.60);sourceAddress(10.1.0.64);sourceAddress(10.1.0.68);sourceAddress(10.1.0.72);sourceAddress(10.2.0.0);sourceAddress(10.2.0.4);sourceAddress(10.2.0.8);sourceAddress(10.2.0.12);sourceAddress(10.2.0.16);sourceAddress(10.3.0.0);sourceAddress(10.3.0.4);sourceAddress(10.3.0.8);sourceAddress(10.3.0.12);sourceAddress(10.3.0.16);sourceAddress(10.3.0.20);sourceAddress(10.3.0.24);sourceAddress(10.3.0.28);sourceAddress(10.3.0.32);sourceAddress(10.3.0.36);sourceAddress(10.3.0.40);sourceAddress(10.3.0.44);sourceAddress(10.3.0.48);sourceAddress(10.3.0.52);sourceAddress(10.3.0.56);sourceAddress(10.3.0.60);sourceAddress(10.3.0.64);sourceAddress(10.3.0.68);sourceAddress(10.3.0.72);sourceAddress(10.3.0.76);sourceAddress(10.3.0.80);sourceAddress(10.3.0.84);sourceAddress(10.3.0.88);sourceAddress(10.3.0.92);sourceAddress(10.3.0.96);sourceAddress(10.3.0.100);sourceAddress(10.3.0.104);sourceAddress(10.3.0.108);sourceAddress(10.3.0.112);sourceAddress(10.3.0.116);sourceAddress(10.4.0.0);sourceAddress(10.4.0.4);sourceAddress(10.4.0.8);sourceAddress(10.4.0.12);sourceAddress(10.4.0.16);sourceAddress(10.4.0.20)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16);destinationAddress(10.0.0.20);destinationAddress(10.0.0.24);destinationAddress(10.0.0.28);destinationAddress(10.0.0.32);destinationAddress(10.0.0.36);destinationAddress(10.0.0.40);destinationAddress(10.0.0.44);destinationAddress(10.0.0.48);destinationAddress(10.0.0.52);destinationAddress(10.0.0.56);destinationAddress(10.0.0.60);destinationAddress(10.0.0.64);destinationAddress(10.0.0.68);destinationAddress(10.0.0.72);destinationAddress(10.0.0.76);destinationAddress(10.0.0.80);destinationAddress(10.0.0.84);destinationAddress(10.0.0.88);destinationAddress(10.0.0.92);destinationAddress(10.0.0.96);destinationAddress(10.0.0.100);destinationAddress(10.0.0.104);destinationAddress(10.0.0.108);destinationAddress(10.0.0.112);destinationAddress(10.0.0.116);destinationAddress(10.0.0.120);destinationAddress(10.0.0.124);destinationAddress(10.0.0.128);destinationAddress(10.0.0.132);destinationAddress(10.0.0.136);destinationAddress(10.0.0.140);destinationAddress(10.0.0.144);destinationAddress(10.0.0.148);destinationAddress(10.0.0.152);destinationAddress(10.0.0.156);destinationAddress(10.0.0.160);destinationAddress(10.0.0.164);destinationAddress(10.0.0.168);destinationAddress(10.0.0.172);destinationAddress(10.0.0.176);destinationAddress(10.0.0.180);destinationAddress(10.0.0.184);destinationAddress(10.1.0.0);destinationAddress(10.1.0.4);destinationAddress(10.1.0.8);destinationAddress(10.1.0.12);destinationAddress(10.1.0.16);destinationAddress(10.1.0.20);destinationAddress(10.1.0.24);destinationAddress(10.1.0.28);destinationAddress(10.1.0.32);destinationAddress(10.1.0.36);destinationAddress(10.1.0.40);destinationAddress(10.1.0.44);destinationAddress(10.1.0.48);destinationAddress(10.1.0.52);destinationAddress(10.1.0.56);destinationAddress(10.1.0.60);destinationAddress(10.1.0.64);destinationAddress(10.1.0.68);destinationAddress(10.1.0.72);destinationAddress(10.2.0.0);destinationAddress(10.2.0.4);destinationAddress(10.2.0.8);destinationAddress(10.2.0.12);destinationAddress(10.2.0.16);destinationAddress(10.3.0.0);destinationAddress(10.3.0.4);destinationAddress(10.3.0.8);destinationAddress(10.3.0.12);destinationAddress(10.3.0.16);destinationAddress(10.3.0.20);destinationAddress(10.3.0.24);destinationAddress(10.3.0.28);destinationAddress(10.3.0.32);destinationAddress(10.3.0.36);destinationAddress(10.3.0.40);destinationAddress(10.3.0.44);destinationAddress(10.3.0.48);destinationAddress(10.3.0.52);destinationAddress(10.3.0.56);destinationAddress(10.3.0.60);destinationAddress(10.3.0.64);destinationAddress(10.3.0.68);destinationAddress(10.3.0.72);destinationAddress(10.3.0.76);destinationAddress(10.3.0.80);destinationAddress(10.3.0.84);destinationAddress(10.3.0.88);destinationAddress(10.3.0.92);destinationAddress(10.3.0.96);destinationAddress(10.3.0.100);destinationAddress(10.3.0.104);destinationAddress(10.3.0.108);destinationAddress(10.3.0.112);destinationAddress(10.3.0.116);destinationAddress(10.4.0.0);destinationAddress(10.4.0.4);destinationAddress(10.4.0.8);destinationAddress(10.4.0.12);destinationAddress(10.4.0.16);destinationAddress(10.4.0.20)"

**.connFIX0.datarate = 100000Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesHTB_R100_Q35_M100_C175]
description = "Configuration for qosOnly5SlicesHTB_R100_Q35_M100_C175. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 1.75"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesHTB_R100_Q35_M100_C175Routing.xml")

*.nVID = 42 # Number of video clients
*.nLVD = 21 # Number of live video client
*.nFDO = 5 # Number of file download clients
*.nSSH = 5 # Number of SSH clients
*.nVIP = 30 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 103
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesHTB_R100_Q35_M100_C175HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16);sourceAddress(10.0.0.20);sourceAddress(10.0.0.24);sourceAddress(10.0.0.28);sourceAddress(10.0.0.32);sourceAddress(10.0.0.36);sourceAddress(10.0.0.40);sourceAddress(10.0.0.44);sourceAddress(10.0.0.48);sourceAddress(10.0.0.52);sourceAddress(10.0.0.56);sourceAddress(10.0.0.60);sourceAddress(10.0.0.64);sourceAddress(10.0.0.68);sourceAddress(10.0.0.72);sourceAddress(10.0.0.76);sourceAddress(10.0.0.80);sourceAddress(10.0.0.84);sourceAddress(10.0.0.88);sourceAddress(10.0.0.92);sourceAddress(10.0.0.96);sourceAddress(10.0.0.100);sourceAddress(10.0.0.104);sourceAddress(10.0.0.108);sourceAddress(10.0.0.112);sourceAddress(10.0.0.116);sourceAddress(10.0.0.120);sourceAddress(10.0.0.124);sourceAddress(10.0.0.128);sourceAddress(10.0.0.132);sourceAddress(10.0.0.136);sourceAddress(10.0.0.140);sourceAddress(10.0.0.144);sourceAddress(10.0.0.148);sourceAddress(10.0.0.152);sourceAddress(10.0.0.156);sourceAddress(10.0.0.160);sourceAddress(10.0.0.164);sourceAddress(10.1.0.0);sourceAddress(10.1.0.4);sourceAddress(10.1.0.8);sourceAddress(10.1.0.12);sourceAddress(10.1.0.16);sourceAddress(10.1.0.20);sourceAddress(10.1.0.24);sourceAddress(10.1.0.28);sourceAddress(10.1.0.32);sourceAddress(10.1.0.36);sourceAddress(10.1.0.40);sourceAddress(10.1.0.44);sourceAddress(10.1.0.48);sourceAddress(10.1.0.52);sourceAddress(10.1.0.56);sourceAddress(10.1.0.60);sourceAddress(10.1.0.64);sourceAddress(10.1.0.68);sourceAddress(10.1.0.72);sourceAddress(10.1.0.76);sourceAddress(10.1.0.80);sourceAddress(10.2.0.0);sourceAddress(10.2.0.4);sourceAddress(10.2.0.8);sourceAddress(10.2.0.12);sourceAddress(10.2.0.16);sourceAddress(10.3.0.0);sourceAddress(10.3.0.4);sourceAddress(10.3.0.8);sourceAddress(10.3.0.12);sourceAddress(10.3.0.16);sourceAddress(10.3.0.20);sourceAddress(10.3.0.24);sourceAddress(10.3.0.28);sourceAddress(10.3.0.32);sourceAddress(10.3.0.36);sourceAddress(10.3.0.40);sourceAddress(10.3.0.44);sourceAddress(10.3.0.48);sourceAddress(10.3.0.52);sourceAddress(10.3.0.56);sourceAddress(10.3.0.60);sourceAddress(10.3.0.64);sourceAddress(10.3.0.68);sourceAddress(10.3.0.72);sourceAddress(10.3.0.76);sourceAddress(10.3.0.80);sourceAddress(10.3.0.84);sourceAddress(10.3.0.88);sourceAddress(10.3.0.92);sourceAddress(10.3.0.96);sourceAddress(10.3.0.100);sourceAddress(10.3.0.104);sourceAddress(10.3.0.108);sourceAddress(10.3.0.112);sourceAddress(10.3.0.116);sourceAddress(10.4.0.0);sourceAddress(10.4.0.4);sourceAddress(10.4.0.8);sourceAddress(10.4.0.12);sourceAddress(10.4.0.16)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16);destinationAddress(10.0.0.20);destinationAddress(10.0.0.24);destinationAddress(10.0.0.28);destinationAddress(10.0.0.32);destinationAddress(10.0.0.36);destinationAddress(10.0.0.40);destinationAddress(10.0.0.44);destinationAddress(10.0.0.48);destinationAddress(10.0.0.52);destinationAddress(10.0.0.56);destinationAddress(10.0.0.60);destinationAddress(10.0.0.64);destinationAddress(10.0.0.68);destinationAddress(10.0.0.72);destinationAddress(10.0.0.76);destinationAddress(10.0.0.80);destinationAddress(10.0.0.84);destinationAddress(10.0.0.88);destinationAddress(10.0.0.92);destinationAddress(10.0.0.96);destinationAddress(10.0.0.100);destinationAddress(10.0.0.104);destinationAddress(10.0.0.108);destinationAddress(10.0.0.112);destinationAddress(10.0.0.116);destinationAddress(10.0.0.120);destinationAddress(10.0.0.124);destinationAddress(10.0.0.128);destinationAddress(10.0.0.132);destinationAddress(10.0.0.136);destinationAddress(10.0.0.140);destinationAddress(10.0.0.144);destinationAddress(10.0.0.148);destinationAddress(10.0.0.152);destinationAddress(10.0.0.156);destinationAddress(10.0.0.160);destinationAddress(10.0.0.164);destinationAddress(10.1.0.0);destinationAddress(10.1.0.4);destinationAddress(10.1.0.8);destinationAddress(10.1.0.12);destinationAddress(10.1.0.16);destinationAddress(10.1.0.20);destinationAddress(10.1.0.24);destinationAddress(10.1.0.28);destinationAddress(10.1.0.32);destinationAddress(10.1.0.36);destinationAddress(10.1.0.40);destinationAddress(10.1.0.44);destinationAddress(10.1.0.48);destinationAddress(10.1.0.52);destinationAddress(10.1.0.56);destinationAddress(10.1.0.60);destinationAddress(10.1.0.64);destinationAddress(10.1.0.68);destinationAddress(10.1.0.72);destinationAddress(10.1.0.76);destinationAddress(10.1.0.80);destinationAddress(10.2.0.0);destinationAddress(10.2.0.4);destinationAddress(10.2.0.8);destinationAddress(10.2.0.12);destinationAddress(10.2.0.16);destinationAddress(10.3.0.0);destinationAddress(10.3.0.4);destinationAddress(10.3.0.8);destinationAddress(10.3.0.12);destinationAddress(10.3.0.16);destinationAddress(10.3.0.20);destinationAddress(10.3.0.24);destinationAddress(10.3.0.28);destinationAddress(10.3.0.32);destinationAddress(10.3.0.36);destinationAddress(10.3.0.40);destinationAddress(10.3.0.44);destinationAddress(10.3.0.48);destinationAddress(10.3.0.52);destinationAddress(10.3.0.56);destinationAddress(10.3.0.60);destinationAddress(10.3.0.64);destinationAddress(10.3.0.68);destinationAddress(10.3.0.72);destinationAddress(10.3.0.76);destinationAddress(10.3.0.80);destinationAddress(10.3.0.84);destinationAddress(10.3.0.88);destinationAddress(10.3.0.92);destinationAddress(10.3.0.96);destinationAddress(10.3.0.100);destinationAddress(10.3.0.104);destinationAddress(10.3.0.108);destinationAddress(10.3.0.112);destinationAddress(10.3.0.116);destinationAddress(10.4.0.0);destinationAddress(10.4.0.4);destinationAddress(10.4.0.8);destinationAddress(10.4.0.12);destinationAddress(10.4.0.16)"

**.connFIX0.datarate = 100000Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesNoHTBVIDSlice_R100_Q35_M100_C175]
description = "Configuration for qosOnly5SlicesNoHTBVIDSlice_R100_Q35_M100_C175. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 1.75"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesNoHTBVIDSlice_R100_Q35_M100_C175Routing.xml")

*.nVID = 42 # Number of video clients
*.nLVD = 0 # Number of live video client
*.nFDO = 0 # Number of file download clients
*.nSSH = 0 # Number of SSH clients
*.nVIP = 0 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 42
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesNoHTBVIDSlice_R100_Q35_M100_C175HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16);sourceAddress(10.0.0.20);sourceAddress(10.0.0.24);sourceAddress(10.0.0.28);sourceAddress(10.0.0.32);sourceAddress(10.0.0.36);sourceAddress(10.0.0.40);sourceAddress(10.0.0.44);sourceAddress(10.0.0.48);sourceAddress(10.0.0.52);sourceAddress(10.0.0.56);sourceAddress(10.0.0.60);sourceAddress(10.0.0.64);sourceAddress(10.0.0.68);sourceAddress(10.0.0.72);sourceAddress(10.0.0.76);sourceAddress(10.0.0.80);sourceAddress(10.0.0.84);sourceAddress(10.0.0.88);sourceAddress(10.0.0.92);sourceAddress(10.0.0.96);sourceAddress(10.0.0.100);sourceAddress(10.0.0.104);sourceAddress(10.0.0.108);sourceAddress(10.0.0.112);sourceAddress(10.0.0.116);sourceAddress(10.0.0.120);sourceAddress(10.0.0.124);sourceAddress(10.0.0.128);sourceAddress(10.0.0.132);sourceAddress(10.0.0.136);sourceAddress(10.0.0.140);sourceAddress(10.0.0.144);sourceAddress(10.0.0.148);sourceAddress(10.0.0.152);sourceAddress(10.0.0.156);sourceAddress(10.0.0.160);sourceAddress(10.0.0.164)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16);destinationAddress(10.0.0.20);destinationAddress(10.0.0.24);destinationAddress(10.0.0.28);destinationAddress(10.0.0.32);destinationAddress(10.0.0.36);destinationAddress(10.0.0.40);destinationAddress(10.0.0.44);destinationAddress(10.0.0.48);destinationAddress(10.0.0.52);destinationAddress(10.0.0.56);destinationAddress(10.0.0.60);destinationAddress(10.0.0.64);destinationAddress(10.0.0.68);destinationAddress(10.0.0.72);destinationAddress(10.0.0.76);destinationAddress(10.0.0.80);destinationAddress(10.0.0.84);destinationAddress(10.0.0.88);destinationAddress(10.0.0.92);destinationAddress(10.0.0.96);destinationAddress(10.0.0.100);destinationAddress(10.0.0.104);destinationAddress(10.0.0.108);destinationAddress(10.0.0.112);destinationAddress(10.0.0.116);destinationAddress(10.0.0.120);destinationAddress(10.0.0.124);destinationAddress(10.0.0.128);destinationAddress(10.0.0.132);destinationAddress(10.0.0.136);destinationAddress(10.0.0.140);destinationAddress(10.0.0.144);destinationAddress(10.0.0.148);destinationAddress(10.0.0.152);destinationAddress(10.0.0.156);destinationAddress(10.0.0.160);destinationAddress(10.0.0.164)"

**.connFIX0.datarate = 47991Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesNoHTBLVDSlice_R100_Q35_M100_C175]
description = "Configuration for qosOnly5SlicesNoHTBLVDSlice_R100_Q35_M100_C175. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 1.75"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesNoHTBLVDSlice_R100_Q35_M100_C175Routing.xml")

*.nVID = 0 # Number of video clients
*.nLVD = 21 # Number of live video client
*.nFDO = 0 # Number of file download clients
*.nSSH = 0 # Number of SSH clients
*.nVIP = 0 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 21
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesNoHTBLVDSlice_R100_Q35_M100_C175HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16);sourceAddress(10.0.0.20);sourceAddress(10.0.0.24);sourceAddress(10.0.0.28);sourceAddress(10.0.0.32);sourceAddress(10.0.0.36);sourceAddress(10.0.0.40);sourceAddress(10.0.0.44);sourceAddress(10.0.0.48);sourceAddress(10.0.0.52);sourceAddress(10.0.0.56);sourceAddress(10.0.0.60);sourceAddress(10.0.0.64);sourceAddress(10.0.0.68);sourceAddress(10.0.0.72);sourceAddress(10.0.0.76);sourceAddress(10.0.0.80)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16);destinationAddress(10.0.0.20);destinationAddress(10.0.0.24);destinationAddress(10.0.0.28);destinationAddress(10.0.0.32);destinationAddress(10.0.0.36);destinationAddress(10.0.0.40);destinationAddress(10.0.0.44);destinationAddress(10.0.0.48);destinationAddress(10.0.0.52);destinationAddress(10.0.0.56);destinationAddress(10.0.0.60);destinationAddress(10.0.0.64);destinationAddress(10.0.0.68);destinationAddress(10.0.0.72);destinationAddress(10.0.0.76);destinationAddress(10.0.0.80)"

**.connFIX0.datarate = 38993Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesNoHTBFDOSlice_R100_Q35_M100_C175]
description = "Configuration for qosOnly5SlicesNoHTBFDOSlice_R100_Q35_M100_C175. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 1.75"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesNoHTBFDOSlice_R100_Q35_M100_C175Routing.xml")

*.nVID = 0 # Number of video clients
*.nLVD = 0 # Number of live video client
*.nFDO = 5 # Number of file download clients
*.nSSH = 0 # Number of SSH clients
*.nVIP = 0 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 5
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesNoHTBFDOSlice_R100_Q35_M100_C175HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16)"

**.connFIX0.datarate = 11997Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesNoHTBVIPSlice_R100_Q35_M100_C175]
description = "Configuration for qosOnly5SlicesNoHTBVIPSlice_R100_Q35_M100_C175. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 1.75"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesNoHTBVIPSlice_R100_Q35_M100_C175Routing.xml")

*.nVID = 0 # Number of video clients
*.nLVD = 0 # Number of live video client
*.nFDO = 0 # Number of file download clients
*.nSSH = 0 # Number of SSH clients
*.nVIP = 30 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 30
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesNoHTBVIPSlice_R100_Q35_M100_C175HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16);sourceAddress(10.0.0.20);sourceAddress(10.0.0.24);sourceAddress(10.0.0.28);sourceAddress(10.0.0.32);sourceAddress(10.0.0.36);sourceAddress(10.0.0.40);sourceAddress(10.0.0.44);sourceAddress(10.0.0.48);sourceAddress(10.0.0.52);sourceAddress(10.0.0.56);sourceAddress(10.0.0.60);sourceAddress(10.0.0.64);sourceAddress(10.0.0.68);sourceAddress(10.0.0.72);sourceAddress(10.0.0.76);sourceAddress(10.0.0.80);sourceAddress(10.0.0.84);sourceAddress(10.0.0.88);sourceAddress(10.0.0.92);sourceAddress(10.0.0.96);sourceAddress(10.0.0.100);sourceAddress(10.0.0.104);sourceAddress(10.0.0.108);sourceAddress(10.0.0.112);sourceAddress(10.0.0.116)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16);destinationAddress(10.0.0.20);destinationAddress(10.0.0.24);destinationAddress(10.0.0.28);destinationAddress(10.0.0.32);destinationAddress(10.0.0.36);destinationAddress(10.0.0.40);destinationAddress(10.0.0.44);destinationAddress(10.0.0.48);destinationAddress(10.0.0.52);destinationAddress(10.0.0.56);destinationAddress(10.0.0.60);destinationAddress(10.0.0.64);destinationAddress(10.0.0.68);destinationAddress(10.0.0.72);destinationAddress(10.0.0.76);destinationAddress(10.0.0.80);destinationAddress(10.0.0.84);destinationAddress(10.0.0.88);destinationAddress(10.0.0.92);destinationAddress(10.0.0.96);destinationAddress(10.0.0.100);destinationAddress(10.0.0.104);destinationAddress(10.0.0.108);destinationAddress(10.0.0.112);destinationAddress(10.0.0.116)"

**.connFIX0.datarate = 964Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesNoHTBSSHSlice_R100_Q35_M100_C175]
description = "Configuration for qosOnly5SlicesNoHTBSSHSlice_R100_Q35_M100_C175. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 1.75"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesNoHTBSSHSlice_R100_Q35_M100_C175Routing.xml")

*.nVID = 0 # Number of video clients
*.nLVD = 0 # Number of live video client
*.nFDO = 0 # Number of file download clients
*.nSSH = 5 # Number of SSH clients
*.nVIP = 0 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 5
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesNoHTBSSHSlice_R100_Q35_M100_C175HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16)"

**.connFIX0.datarate = 53Kbps
**.connFIX0.delay = 40ms


[Config qosOnlyBase_R100_Q35_M100_C200]
description = "Configuration for qosOnlyBase_R100_Q35_M100_C200. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 2.0"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnlyBase_R100_Q35_M100_C200Routing.xml")

*.nVID = 47 # Number of video clients
*.nLVD = 19 # Number of live video client
*.nFDO = 5 # Number of file download clients
*.nSSH = 6 # Number of SSH clients
*.nVIP = 30 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 107
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnlyBase_R100_Q35_M100_C200HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16);sourceAddress(10.0.0.20);sourceAddress(10.0.0.24);sourceAddress(10.0.0.28);sourceAddress(10.0.0.32);sourceAddress(10.0.0.36);sourceAddress(10.0.0.40);sourceAddress(10.0.0.44);sourceAddress(10.0.0.48);sourceAddress(10.0.0.52);sourceAddress(10.0.0.56);sourceAddress(10.0.0.60);sourceAddress(10.0.0.64);sourceAddress(10.0.0.68);sourceAddress(10.0.0.72);sourceAddress(10.0.0.76);sourceAddress(10.0.0.80);sourceAddress(10.0.0.84);sourceAddress(10.0.0.88);sourceAddress(10.0.0.92);sourceAddress(10.0.0.96);sourceAddress(10.0.0.100);sourceAddress(10.0.0.104);sourceAddress(10.0.0.108);sourceAddress(10.0.0.112);sourceAddress(10.0.0.116);sourceAddress(10.0.0.120);sourceAddress(10.0.0.124);sourceAddress(10.0.0.128);sourceAddress(10.0.0.132);sourceAddress(10.0.0.136);sourceAddress(10.0.0.140);sourceAddress(10.0.0.144);sourceAddress(10.0.0.148);sourceAddress(10.0.0.152);sourceAddress(10.0.0.156);sourceAddress(10.0.0.160);sourceAddress(10.0.0.164);sourceAddress(10.0.0.168);sourceAddress(10.0.0.172);sourceAddress(10.0.0.176);sourceAddress(10.0.0.180);sourceAddress(10.0.0.184);sourceAddress(10.1.0.0);sourceAddress(10.1.0.4);sourceAddress(10.1.0.8);sourceAddress(10.1.0.12);sourceAddress(10.1.0.16);sourceAddress(10.1.0.20);sourceAddress(10.1.0.24);sourceAddress(10.1.0.28);sourceAddress(10.1.0.32);sourceAddress(10.1.0.36);sourceAddress(10.1.0.40);sourceAddress(10.1.0.44);sourceAddress(10.1.0.48);sourceAddress(10.1.0.52);sourceAddress(10.1.0.56);sourceAddress(10.1.0.60);sourceAddress(10.1.0.64);sourceAddress(10.1.0.68);sourceAddress(10.1.0.72);sourceAddress(10.2.0.0);sourceAddress(10.2.0.4);sourceAddress(10.2.0.8);sourceAddress(10.2.0.12);sourceAddress(10.2.0.16);sourceAddress(10.3.0.0);sourceAddress(10.3.0.4);sourceAddress(10.3.0.8);sourceAddress(10.3.0.12);sourceAddress(10.3.0.16);sourceAddress(10.3.0.20);sourceAddress(10.3.0.24);sourceAddress(10.3.0.28);sourceAddress(10.3.0.32);sourceAddress(10.3.0.36);sourceAddress(10.3.0.40);sourceAddress(10.3.0.44);sourceAddress(10.3.0.48);sourceAddress(10.3.0.52);sourceAddress(10.3.0.56);sourceAddress(10.3.0.60);sourceAddress(10.3.0.64);sourceAddress(10.3.0.68);sourceAddress(10.3.0.72);sourceAddress(10.3.0.76);sourceAddress(10.3.0.80);sourceAddress(10.3.0.84);sourceAddress(10.3.0.88);sourceAddress(10.3.0.92);sourceAddress(10.3.0.96);sourceAddress(10.3.0.100);sourceAddress(10.3.0.104);sourceAddress(10.3.0.108);sourceAddress(10.3.0.112);sourceAddress(10.3.0.116);sourceAddress(10.4.0.0);sourceAddress(10.4.0.4);sourceAddress(10.4.0.8);sourceAddress(10.4.0.12);sourceAddress(10.4.0.16);sourceAddress(10.4.0.20)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16);destinationAddress(10.0.0.20);destinationAddress(10.0.0.24);destinationAddress(10.0.0.28);destinationAddress(10.0.0.32);destinationAddress(10.0.0.36);destinationAddress(10.0.0.40);destinationAddress(10.0.0.44);destinationAddress(10.0.0.48);destinationAddress(10.0.0.52);destinationAddress(10.0.0.56);destinationAddress(10.0.0.60);destinationAddress(10.0.0.64);destinationAddress(10.0.0.68);destinationAddress(10.0.0.72);destinationAddress(10.0.0.76);destinationAddress(10.0.0.80);destinationAddress(10.0.0.84);destinationAddress(10.0.0.88);destinationAddress(10.0.0.92);destinationAddress(10.0.0.96);destinationAddress(10.0.0.100);destinationAddress(10.0.0.104);destinationAddress(10.0.0.108);destinationAddress(10.0.0.112);destinationAddress(10.0.0.116);destinationAddress(10.0.0.120);destinationAddress(10.0.0.124);destinationAddress(10.0.0.128);destinationAddress(10.0.0.132);destinationAddress(10.0.0.136);destinationAddress(10.0.0.140);destinationAddress(10.0.0.144);destinationAddress(10.0.0.148);destinationAddress(10.0.0.152);destinationAddress(10.0.0.156);destinationAddress(10.0.0.160);destinationAddress(10.0.0.164);destinationAddress(10.0.0.168);destinationAddress(10.0.0.172);destinationAddress(10.0.0.176);destinationAddress(10.0.0.180);destinationAddress(10.0.0.184);destinationAddress(10.1.0.0);destinationAddress(10.1.0.4);destinationAddress(10.1.0.8);destinationAddress(10.1.0.12);destinationAddress(10.1.0.16);destinationAddress(10.1.0.20);destinationAddress(10.1.0.24);destinationAddress(10.1.0.28);destinationAddress(10.1.0.32);destinationAddress(10.1.0.36);destinationAddress(10.1.0.40);destinationAddress(10.1.0.44);destinationAddress(10.1.0.48);destinationAddress(10.1.0.52);destinationAddress(10.1.0.56);destinationAddress(10.1.0.60);destinationAddress(10.1.0.64);destinationAddress(10.1.0.68);destinationAddress(10.1.0.72);destinationAddress(10.2.0.0);destinationAddress(10.2.0.4);destinationAddress(10.2.0.8);destinationAddress(10.2.0.12);destinationAddress(10.2.0.16);destinationAddress(10.3.0.0);destinationAddress(10.3.0.4);destinationAddress(10.3.0.8);destinationAddress(10.3.0.12);destinationAddress(10.3.0.16);destinationAddress(10.3.0.20);destinationAddress(10.3.0.24);destinationAddress(10.3.0.28);destinationAddress(10.3.0.32);destinationAddress(10.3.0.36);destinationAddress(10.3.0.40);destinationAddress(10.3.0.44);destinationAddress(10.3.0.48);destinationAddress(10.3.0.52);destinationAddress(10.3.0.56);destinationAddress(10.3.0.60);destinationAddress(10.3.0.64);destinationAddress(10.3.0.68);destinationAddress(10.3.0.72);destinationAddress(10.3.0.76);destinationAddress(10.3.0.80);destinationAddress(10.3.0.84);destinationAddress(10.3.0.88);destinationAddress(10.3.0.92);destinationAddress(10.3.0.96);destinationAddress(10.3.0.100);destinationAddress(10.3.0.104);destinationAddress(10.3.0.108);destinationAddress(10.3.0.112);destinationAddress(10.3.0.116);destinationAddress(10.4.0.0);destinationAddress(10.4.0.4);destinationAddress(10.4.0.8);destinationAddress(10.4.0.12);destinationAddress(10.4.0.16);destinationAddress(10.4.0.20)"

**.connFIX0.datarate = 100000Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesHTB_R100_Q35_M100_C200]
description = "Configuration for qosOnly5SlicesHTB_R100_Q35_M100_C200. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 2.0"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesHTB_R100_Q35_M100_C200Routing.xml")

*.nVID = 42 # Number of video clients
*.nLVD = 21 # Number of live video client
*.nFDO = 5 # Number of file download clients
*.nSSH = 5 # Number of SSH clients
*.nVIP = 30 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 103
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesHTB_R100_Q35_M100_C200HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16);sourceAddress(10.0.0.20);sourceAddress(10.0.0.24);sourceAddress(10.0.0.28);sourceAddress(10.0.0.32);sourceAddress(10.0.0.36);sourceAddress(10.0.0.40);sourceAddress(10.0.0.44);sourceAddress(10.0.0.48);sourceAddress(10.0.0.52);sourceAddress(10.0.0.56);sourceAddress(10.0.0.60);sourceAddress(10.0.0.64);sourceAddress(10.0.0.68);sourceAddress(10.0.0.72);sourceAddress(10.0.0.76);sourceAddress(10.0.0.80);sourceAddress(10.0.0.84);sourceAddress(10.0.0.88);sourceAddress(10.0.0.92);sourceAddress(10.0.0.96);sourceAddress(10.0.0.100);sourceAddress(10.0.0.104);sourceAddress(10.0.0.108);sourceAddress(10.0.0.112);sourceAddress(10.0.0.116);sourceAddress(10.0.0.120);sourceAddress(10.0.0.124);sourceAddress(10.0.0.128);sourceAddress(10.0.0.132);sourceAddress(10.0.0.136);sourceAddress(10.0.0.140);sourceAddress(10.0.0.144);sourceAddress(10.0.0.148);sourceAddress(10.0.0.152);sourceAddress(10.0.0.156);sourceAddress(10.0.0.160);sourceAddress(10.0.0.164);sourceAddress(10.1.0.0);sourceAddress(10.1.0.4);sourceAddress(10.1.0.8);sourceAddress(10.1.0.12);sourceAddress(10.1.0.16);sourceAddress(10.1.0.20);sourceAddress(10.1.0.24);sourceAddress(10.1.0.28);sourceAddress(10.1.0.32);sourceAddress(10.1.0.36);sourceAddress(10.1.0.40);sourceAddress(10.1.0.44);sourceAddress(10.1.0.48);sourceAddress(10.1.0.52);sourceAddress(10.1.0.56);sourceAddress(10.1.0.60);sourceAddress(10.1.0.64);sourceAddress(10.1.0.68);sourceAddress(10.1.0.72);sourceAddress(10.1.0.76);sourceAddress(10.1.0.80);sourceAddress(10.2.0.0);sourceAddress(10.2.0.4);sourceAddress(10.2.0.8);sourceAddress(10.2.0.12);sourceAddress(10.2.0.16);sourceAddress(10.3.0.0);sourceAddress(10.3.0.4);sourceAddress(10.3.0.8);sourceAddress(10.3.0.12);sourceAddress(10.3.0.16);sourceAddress(10.3.0.20);sourceAddress(10.3.0.24);sourceAddress(10.3.0.28);sourceAddress(10.3.0.32);sourceAddress(10.3.0.36);sourceAddress(10.3.0.40);sourceAddress(10.3.0.44);sourceAddress(10.3.0.48);sourceAddress(10.3.0.52);sourceAddress(10.3.0.56);sourceAddress(10.3.0.60);sourceAddress(10.3.0.64);sourceAddress(10.3.0.68);sourceAddress(10.3.0.72);sourceAddress(10.3.0.76);sourceAddress(10.3.0.80);sourceAddress(10.3.0.84);sourceAddress(10.3.0.88);sourceAddress(10.3.0.92);sourceAddress(10.3.0.96);sourceAddress(10.3.0.100);sourceAddress(10.3.0.104);sourceAddress(10.3.0.108);sourceAddress(10.3.0.112);sourceAddress(10.3.0.116);sourceAddress(10.4.0.0);sourceAddress(10.4.0.4);sourceAddress(10.4.0.8);sourceAddress(10.4.0.12);sourceAddress(10.4.0.16)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16);destinationAddress(10.0.0.20);destinationAddress(10.0.0.24);destinationAddress(10.0.0.28);destinationAddress(10.0.0.32);destinationAddress(10.0.0.36);destinationAddress(10.0.0.40);destinationAddress(10.0.0.44);destinationAddress(10.0.0.48);destinationAddress(10.0.0.52);destinationAddress(10.0.0.56);destinationAddress(10.0.0.60);destinationAddress(10.0.0.64);destinationAddress(10.0.0.68);destinationAddress(10.0.0.72);destinationAddress(10.0.0.76);destinationAddress(10.0.0.80);destinationAddress(10.0.0.84);destinationAddress(10.0.0.88);destinationAddress(10.0.0.92);destinationAddress(10.0.0.96);destinationAddress(10.0.0.100);destinationAddress(10.0.0.104);destinationAddress(10.0.0.108);destinationAddress(10.0.0.112);destinationAddress(10.0.0.116);destinationAddress(10.0.0.120);destinationAddress(10.0.0.124);destinationAddress(10.0.0.128);destinationAddress(10.0.0.132);destinationAddress(10.0.0.136);destinationAddress(10.0.0.140);destinationAddress(10.0.0.144);destinationAddress(10.0.0.148);destinationAddress(10.0.0.152);destinationAddress(10.0.0.156);destinationAddress(10.0.0.160);destinationAddress(10.0.0.164);destinationAddress(10.1.0.0);destinationAddress(10.1.0.4);destinationAddress(10.1.0.8);destinationAddress(10.1.0.12);destinationAddress(10.1.0.16);destinationAddress(10.1.0.20);destinationAddress(10.1.0.24);destinationAddress(10.1.0.28);destinationAddress(10.1.0.32);destinationAddress(10.1.0.36);destinationAddress(10.1.0.40);destinationAddress(10.1.0.44);destinationAddress(10.1.0.48);destinationAddress(10.1.0.52);destinationAddress(10.1.0.56);destinationAddress(10.1.0.60);destinationAddress(10.1.0.64);destinationAddress(10.1.0.68);destinationAddress(10.1.0.72);destinationAddress(10.1.0.76);destinationAddress(10.1.0.80);destinationAddress(10.2.0.0);destinationAddress(10.2.0.4);destinationAddress(10.2.0.8);destinationAddress(10.2.0.12);destinationAddress(10.2.0.16);destinationAddress(10.3.0.0);destinationAddress(10.3.0.4);destinationAddress(10.3.0.8);destinationAddress(10.3.0.12);destinationAddress(10.3.0.16);destinationAddress(10.3.0.20);destinationAddress(10.3.0.24);destinationAddress(10.3.0.28);destinationAddress(10.3.0.32);destinationAddress(10.3.0.36);destinationAddress(10.3.0.40);destinationAddress(10.3.0.44);destinationAddress(10.3.0.48);destinationAddress(10.3.0.52);destinationAddress(10.3.0.56);destinationAddress(10.3.0.60);destinationAddress(10.3.0.64);destinationAddress(10.3.0.68);destinationAddress(10.3.0.72);destinationAddress(10.3.0.76);destinationAddress(10.3.0.80);destinationAddress(10.3.0.84);destinationAddress(10.3.0.88);destinationAddress(10.3.0.92);destinationAddress(10.3.0.96);destinationAddress(10.3.0.100);destinationAddress(10.3.0.104);destinationAddress(10.3.0.108);destinationAddress(10.3.0.112);destinationAddress(10.3.0.116);destinationAddress(10.4.0.0);destinationAddress(10.4.0.4);destinationAddress(10.4.0.8);destinationAddress(10.4.0.12);destinationAddress(10.4.0.16)"

**.connFIX0.datarate = 100000Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesNoHTBVIDSlice_R100_Q35_M100_C200]
description = "Configuration for qosOnly5SlicesNoHTBVIDSlice_R100_Q35_M100_C200. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 2.0"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesNoHTBVIDSlice_R100_Q35_M100_C200Routing.xml")

*.nVID = 42 # Number of video clients
*.nLVD = 0 # Number of live video client
*.nFDO = 0 # Number of file download clients
*.nSSH = 0 # Number of SSH clients
*.nVIP = 0 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 42
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesNoHTBVIDSlice_R100_Q35_M100_C200HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16);sourceAddress(10.0.0.20);sourceAddress(10.0.0.24);sourceAddress(10.0.0.28);sourceAddress(10.0.0.32);sourceAddress(10.0.0.36);sourceAddress(10.0.0.40);sourceAddress(10.0.0.44);sourceAddress(10.0.0.48);sourceAddress(10.0.0.52);sourceAddress(10.0.0.56);sourceAddress(10.0.0.60);sourceAddress(10.0.0.64);sourceAddress(10.0.0.68);sourceAddress(10.0.0.72);sourceAddress(10.0.0.76);sourceAddress(10.0.0.80);sourceAddress(10.0.0.84);sourceAddress(10.0.0.88);sourceAddress(10.0.0.92);sourceAddress(10.0.0.96);sourceAddress(10.0.0.100);sourceAddress(10.0.0.104);sourceAddress(10.0.0.108);sourceAddress(10.0.0.112);sourceAddress(10.0.0.116);sourceAddress(10.0.0.120);sourceAddress(10.0.0.124);sourceAddress(10.0.0.128);sourceAddress(10.0.0.132);sourceAddress(10.0.0.136);sourceAddress(10.0.0.140);sourceAddress(10.0.0.144);sourceAddress(10.0.0.148);sourceAddress(10.0.0.152);sourceAddress(10.0.0.156);sourceAddress(10.0.0.160);sourceAddress(10.0.0.164)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16);destinationAddress(10.0.0.20);destinationAddress(10.0.0.24);destinationAddress(10.0.0.28);destinationAddress(10.0.0.32);destinationAddress(10.0.0.36);destinationAddress(10.0.0.40);destinationAddress(10.0.0.44);destinationAddress(10.0.0.48);destinationAddress(10.0.0.52);destinationAddress(10.0.0.56);destinationAddress(10.0.0.60);destinationAddress(10.0.0.64);destinationAddress(10.0.0.68);destinationAddress(10.0.0.72);destinationAddress(10.0.0.76);destinationAddress(10.0.0.80);destinationAddress(10.0.0.84);destinationAddress(10.0.0.88);destinationAddress(10.0.0.92);destinationAddress(10.0.0.96);destinationAddress(10.0.0.100);destinationAddress(10.0.0.104);destinationAddress(10.0.0.108);destinationAddress(10.0.0.112);destinationAddress(10.0.0.116);destinationAddress(10.0.0.120);destinationAddress(10.0.0.124);destinationAddress(10.0.0.128);destinationAddress(10.0.0.132);destinationAddress(10.0.0.136);destinationAddress(10.0.0.140);destinationAddress(10.0.0.144);destinationAddress(10.0.0.148);destinationAddress(10.0.0.152);destinationAddress(10.0.0.156);destinationAddress(10.0.0.160);destinationAddress(10.0.0.164)"

**.connFIX0.datarate = 47991Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesNoHTBLVDSlice_R100_Q35_M100_C200]
description = "Configuration for qosOnly5SlicesNoHTBLVDSlice_R100_Q35_M100_C200. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 2.0"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesNoHTBLVDSlice_R100_Q35_M100_C200Routing.xml")

*.nVID = 0 # Number of video clients
*.nLVD = 21 # Number of live video client
*.nFDO = 0 # Number of file download clients
*.nSSH = 0 # Number of SSH clients
*.nVIP = 0 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 21
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesNoHTBLVDSlice_R100_Q35_M100_C200HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16);sourceAddress(10.0.0.20);sourceAddress(10.0.0.24);sourceAddress(10.0.0.28);sourceAddress(10.0.0.32);sourceAddress(10.0.0.36);sourceAddress(10.0.0.40);sourceAddress(10.0.0.44);sourceAddress(10.0.0.48);sourceAddress(10.0.0.52);sourceAddress(10.0.0.56);sourceAddress(10.0.0.60);sourceAddress(10.0.0.64);sourceAddress(10.0.0.68);sourceAddress(10.0.0.72);sourceAddress(10.0.0.76);sourceAddress(10.0.0.80)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16);destinationAddress(10.0.0.20);destinationAddress(10.0.0.24);destinationAddress(10.0.0.28);destinationAddress(10.0.0.32);destinationAddress(10.0.0.36);destinationAddress(10.0.0.40);destinationAddress(10.0.0.44);destinationAddress(10.0.0.48);destinationAddress(10.0.0.52);destinationAddress(10.0.0.56);destinationAddress(10.0.0.60);destinationAddress(10.0.0.64);destinationAddress(10.0.0.68);destinationAddress(10.0.0.72);destinationAddress(10.0.0.76);destinationAddress(10.0.0.80)"

**.connFIX0.datarate = 38993Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesNoHTBFDOSlice_R100_Q35_M100_C200]
description = "Configuration for qosOnly5SlicesNoHTBFDOSlice_R100_Q35_M100_C200. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 2.0"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesNoHTBFDOSlice_R100_Q35_M100_C200Routing.xml")

*.nVID = 0 # Number of video clients
*.nLVD = 0 # Number of live video client
*.nFDO = 5 # Number of file download clients
*.nSSH = 0 # Number of SSH clients
*.nVIP = 0 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 5
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesNoHTBFDOSlice_R100_Q35_M100_C200HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16)"

**.connFIX0.datarate = 11997Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesNoHTBVIPSlice_R100_Q35_M100_C200]
description = "Configuration for qosOnly5SlicesNoHTBVIPSlice_R100_Q35_M100_C200. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 2.0"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesNoHTBVIPSlice_R100_Q35_M100_C200Routing.xml")

*.nVID = 0 # Number of video clients
*.nLVD = 0 # Number of live video client
*.nFDO = 0 # Number of file download clients
*.nSSH = 0 # Number of SSH clients
*.nVIP = 30 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 30
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesNoHTBVIPSlice_R100_Q35_M100_C200HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16);sourceAddress(10.0.0.20);sourceAddress(10.0.0.24);sourceAddress(10.0.0.28);sourceAddress(10.0.0.32);sourceAddress(10.0.0.36);sourceAddress(10.0.0.40);sourceAddress(10.0.0.44);sourceAddress(10.0.0.48);sourceAddress(10.0.0.52);sourceAddress(10.0.0.56);sourceAddress(10.0.0.60);sourceAddress(10.0.0.64);sourceAddress(10.0.0.68);sourceAddress(10.0.0.72);sourceAddress(10.0.0.76);sourceAddress(10.0.0.80);sourceAddress(10.0.0.84);sourceAddress(10.0.0.88);sourceAddress(10.0.0.92);sourceAddress(10.0.0.96);sourceAddress(10.0.0.100);sourceAddress(10.0.0.104);sourceAddress(10.0.0.108);sourceAddress(10.0.0.112);sourceAddress(10.0.0.116)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16);destinationAddress(10.0.0.20);destinationAddress(10.0.0.24);destinationAddress(10.0.0.28);destinationAddress(10.0.0.32);destinationAddress(10.0.0.36);destinationAddress(10.0.0.40);destinationAddress(10.0.0.44);destinationAddress(10.0.0.48);destinationAddress(10.0.0.52);destinationAddress(10.0.0.56);destinationAddress(10.0.0.60);destinationAddress(10.0.0.64);destinationAddress(10.0.0.68);destinationAddress(10.0.0.72);destinationAddress(10.0.0.76);destinationAddress(10.0.0.80);destinationAddress(10.0.0.84);destinationAddress(10.0.0.88);destinationAddress(10.0.0.92);destinationAddress(10.0.0.96);destinationAddress(10.0.0.100);destinationAddress(10.0.0.104);destinationAddress(10.0.0.108);destinationAddress(10.0.0.112);destinationAddress(10.0.0.116)"

**.connFIX0.datarate = 964Kbps
**.connFIX0.delay = 40ms


[Config qosOnly5SlicesNoHTBSSHSlice_R100_Q35_M100_C200]
description = "Configuration for qosOnly5SlicesNoHTBSSHSlice_R100_Q35_M100_C200. All five applications. QoS employed. Guarantee Multiplier: 1.0; Ceil multiplier: 2.0"

extends = liteCbaselineTestTokenQoS_base

*.configurator.config = xmldoc("configs/baseQoS/qosOnly5SlicesNoHTBSSHSlice_R100_Q35_M100_C200Routing.xml")

*.nVID = 0 # Number of video clients
*.nLVD = 0 # Number of live video client
*.nFDO = 0 # Number of file download clients
*.nSSH = 5 # Number of SSH clients
*.nVIP = 0 # Number of VoIP clients

*.router*.ppp[0].ppp.queue.typename = "HTBQueue"
*.router*.ppp[0].ppp.queue.numQueues = 5
*.router*.ppp[0].ppp.queue.queue[*].typename = "DropTailQueue"
*.router*.ppp[0].ppp.queue.htbHysterisis = false
*.router*.ppp[0].ppp.queue.htbTreeConfig = xmldoc("configs/htbTree/qosOnly5SlicesNoHTBSSHSlice_R100_Q35_M100_C200HTB.xml")
*.router*.ppp[0].ppp.queue.classifier.defaultGateIndex = 0
*.router*.ppp[0].ppp.queue.classifier.packetFilters = "*;*;*;*;*"
*.router0.ppp[0].ppp.queue.classifier.packetDataFilters = "sourceAddress(10.0.0.0);sourceAddress(10.0.0.4);sourceAddress(10.0.0.8);sourceAddress(10.0.0.12);sourceAddress(10.0.0.16)"
*.router1.ppp[0].ppp.queue.classifier.packetDataFilters = "destinationAddress(10.0.0.0);destinationAddress(10.0.0.4);destinationAddress(10.0.0.8);destinationAddress(10.0.0.12);destinationAddress(10.0.0.16)"

**.connFIX0.datarate = 53Kbps
**.connFIX0.delay = 40ms


